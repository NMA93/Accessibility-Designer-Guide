{
  
  "0": {
    "title": "10 Heuristics of Jakob Nielsen",
    "content": "10 Heuristics of Jakob Nielsen . If there is such a thing as a generally accepted guide to good usability, then these are the 10 interaction design principles of Jakob Nielsen. If the heuristics are followed from the beginning, many accessibility problems can be avoided. . . . . 1. Visibility of system status | 2. Match between system and the real world | 3. User control and freedom | 4. Consistency and standards | 5. Error prevention | 6. Recognition rather than recall | 7. Flexibility and efficiency of use | 8. Aesthetic and minimalist design | 9. Help users recognize, diagnose, and recover from errors | 10. Help and documentation | . 1. Visibility of system status . Nothing is more annoying than a process that the user cannot understand. The system should always give the user feedback in a reasonable amount of time and inform him about what is happening. By providing clear feedback on the status of the system, people with disabilities will feel more secure while using the system. . . In this example the user is immediately shown that the sending is in progress. Also the progress of the process is shown to the user. Through this feedback the user knows that everything works. . . 2. Match between system and the real world . In order for the interface to speak the language of the user, it is important to use familiar patterns. Shapes from the real world which can be transferred into the digital interface can increase the usability significantly. . . In this example we see a boarding pass, it makes sense that we do not change its appearance. The user knows where to find his information on a printed boarding pass. Another example are credit cards in apps. . . 3. User control and freedom . Incorrect functions of a system are quickly selected, we should always and at any time give the user the opportunity to abort a process as easy as possible. This can especially help people with disabilities if they accidentally activate a wrong function in the system. . . . 4. Consistency and standards . A very important point to improve the accessibility of a site. Same appearance and same wording should always mean the same function. . . To ensure consistency across the entire project, you should always create a design system. This makes it easier to use the same elements across all screens. . . 5. Error prevention . Through the appearance of the elements and their positioning, errors can be avoided right from the start. This can reduce the error rate when using the system and at the same time increase accessibility. . . In this example, the user is shown suggestions while typing, even though he has misspelled the term. This avoids an unnecessary search without result. . . 6. Recognition rather than recall . The user should never have to remember relevant information across multiple interactions. The design should always demand as little background knowledge from the user as possible. Options and actions should always be visible. The system should support the user in this, so the accessibility of a page can be increased. . . A good example is a font selection menu. No one can ask the user to know the visuality of all fonts by memory. Therefore their visuality is already shown in the menu. . . 7. Flexibility and efficiency of use . The system should be customizable for experienced users. So they can use tools and shortcuts to work with the system faster and easier. For inexperienced users or people with disabilities, the lack of use of such tools should not affect the process. . . In this example the common shortcuts of programs are shown, these can be used via the keyboard or via the navigation. . . 8. Aesthetic and minimalist design . Dialogues should be reduced to the essential. The usershould only be shown what is relevant for him. This increases the usability of a page by a screen reader significantly. . . As a good example of this, login screens can be considered. Optimally, there is nothing else on such a screen but elements that are needed for the login. Also search engines are a good example, google reduces its home page to the essential. Nothing more than a search box is needed. . . 9. Help users recognize, diagnose, and recover from errors . Error messages should be described as simply as possible and should not contain any code. Suggested solutions help the users to solve the problem. . . By marking the incorrect input field and the clear message that describes the error, the user knows exactly what to do. . . 10. Help and documentation . Even if a system should be self-explanatory, it is helpful to have a simple and quick guide. . . . Links . Nielsen Norman Group – 10 Heuristics .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/accessibility-in-general/10-heuristics/",
    "relUrl": "/docs/accessibility-in-general/10-heuristics/"
  }
  ,"2": {
    "title": "Gestures",
    "content": "Gestures . TBD. . . . Swipe, shake and 3D-Touch | Making alternatives visible | . Swipe, shake and 3D-Touch . TBD . . Making alternatives visible . TBD. .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules/Gestures/",
    "relUrl": "/docs/design-rules/Gestures/"
  }
  ,"3": {
    "title": "Accessibility in general",
    "content": "Accessibility in general . Accessibility has become increasingly important in recent years. Due to the increasing digitalization in all areas, more and more people are using digital solutions. Nevertheless, the approach “Internet for all” is still not lived enough. .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/accessibility-in-general",
    "relUrl": "/docs/accessibility-in-general"
  }
  ,"4": {
    "title": "Animations",
    "content": "Animations . TBD. . . . The problem with animations | Hectic animations | Animations do not have to be bad | Give the user time to read the information | . The problem with animations . TBD . . Hectic animations . TBD . . Animations do not have to be bad . TBD. . . Give the user time to read the information . TBD. .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules/animations/",
    "relUrl": "/docs/design-rules/animations/"
  }
  ,"5": {
    "title": "Application feedback",
    "content": "Application feedback . An action in the analog world, often has a reaction as a result. This gives us a very fast feedback if our action was correct or incorrect. This behaviour should be transferred to the digital world if possible. . Visibility of system status . Match between system and the real world . Error prevention . Help users recognize, diagnose, and recover from errors . Help and documentation . . . The lack of response is no answer | Error message Avoid technical terms | Offer help | Immediate error feedback | | General error messages (404) | Success message | Confirmation message | In progress message In progress | Pending | | Status messages | . The lack of response is no answer . For all users it is confusing when the system completes an interaction or process without feedback. On the one hand you get the feeling that something has not worked. On the other hand, the user is not sure if the process took place at all. For users with disabilities who quickly make mistakes when using websites this is a accessibility problem. . We take a closer look at the following immediate feedback options: . Error message | Success message | Confirmation message | In progress message | Status messages | . . Error message . Error messages are an important tool to give the user direct feedback on his action. But what do I have to consider so that error messages are useful and accessible for the user? . Avoid technical terms . In order to make error messages barrier-free, technical terms should be avoided. This makes it easier for people with impairments and reading difficulties to recover from errors. See also chapter Content and language to get more detailed information about accessible language. . Offer help . So that users can recover quickly from an error, not only an error message should appear. In addition, solutions should also be shown and, if necessary, quick-links and FAQs should be listed which could solve the problem. This shortens the search for a solution and people with disabilities have to search less on the site for solutions. . Immediate error feedback . another way to communicate with the user is through direct and immediate feedback.Errors can be avoided already during the input of information. See also chapter Support trough the system to get more detailed information about error prevention. . Input . Input fields are well suited for direct feedback. Through the immediate feedback and a correspondingly descriptive error message, the user immediately knows what was done wrong. This avoids mistakes during data entry and gives people with disabilities more confidence when using the system. . . Processes . If processes fail, they must also generate an immediate feedback. It should be noted that these are linked with suggested solutions or links to the FAQs. . . . General error messages (404) . General error messages such as a “404 message” should not contain technical terms and should also contain further links. Useful for disabled users is a “back to home” button. This gives them an easy way back to the original page. . . . Success message . Along with the error messages, success messages are just as important to give a user confidence. Just like error messages they are important for users with disabilities to check their input. . Input . Input fields are very well suited to confirm successful input. By confirming the e-mail format or the successful password retype, many errors in their creation can be avoided. . . Processes . Processes can give successful immediate feedback. For example, sending a message can be indicated as successful, or transferring money can generate successful feedback. This gives inexperienced users or users with disabilities confidence in using the system. . . . Confirmation message . In order to give users even more confidence in using the system, the system should ask the user before important actions if the action is really wanted. This is important for users with disabilities, as they can quickly trigger a wrong action. . . . In progress message . Sometimes a process cannot be completed immediately. If this is the case it is important to mark it properly. This way, users can be sure that the process is running and the system has not crashed. . The following processes can be an example of such a case: . Insurance: documents are being processed by the agent. | Sending files: the upload takes 10 minutes. | Post: tracking of a parcel | . We can separate longer lasting processes into 2 categories. . In progress . The process takes longer, but will be completed in the near future. As an example, this can be the upload of a large file. Here it is important to show the user the remaining duration and the current status. If such a process is executed in the background, the user is confused. It is also important to give the user the possibility to cancel such a process at any time. This helps users with disabilities, if they have triggered a wrong action. . . Pending . The process takes several days or weeks. For example, the processing of a document submitted online to the insurance company. Here it is important to display the current status in detail, so that the user can be sure that his or her request is being processed. Frequent updates ensure that inexperienced users or users with disabilities can handle the system with confidence. . . . Status messages . System messages are an important feature for users with a screen reader to see what is happening on the website. . Examples for system messages: . A user stores a link via a button in his clipboard. A short appearing snackbar shows the successful copying of the link. | A user does not want to be disturbed and sets his status to “do not disturb”. The status changes immediately. | An item is added to the shopping cart and a short snackbar confirms this. | . It is important that such system messages are displayed long enough to be read by a screen reader or a person with impaired vision. You should also not disturb or interrupt the current session. . . . Links . W3C – Input Assistance W3C – Error Identification W3C – Error Prevention W3C – Status Messages .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules/application-feedback/",
    "relUrl": "/docs/design-rules/application-feedback/"
  }
  ,"6": {
    "title": "Architecture",
    "content": "Architecture . The architecture of a website is the key to a barrier-free website. The following chapters describe basic topics that are important in the early stages of a project. If these principles are followed, many accessibility problems from a design point of view can be avoided. .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/architecture",
    "relUrl": "/docs/architecture"
  }
  ,"7": {
    "title": "ARIA",
    "content": "ARIA . Accessible Rich Internet Applications (ARIA) allow web developers to make web content more accessible to people with disabilities and other limitations. . . . . What is ARIA | How can I implement ARIA in my designs? | . What is ARIA . Even though this topic is more on the technical side, I would still like to discuss it in this chapter. By using ARIA, the accessibility of a website is noticeably improved. For example, the content of a website can be extended by ARIA to include form descriptions or displays of the current value in progress indicators. This is extremely helpful for users who want to use a screen reader to navigate a website. But how does it work exactly? . TBD. . . How can I implement ARIA in my designs? . TBD . . Links . W3C – ARIA Developer Mozilla ARIA .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/accessibility-in-general/aria/",
    "relUrl": "/docs/accessibility-in-general/aria/"
  }
  ,"8": {
    "title": "Colours",
    "content": "Colours . When it comes to colours, many websites die in beauty. Often CI colours for print are taken over 1:1 into the web and this does not always work very well for people with impaired vision. . . . It affects more people than you think | Give your site enough contrast | Do not make information dependent on their colour | . It affects more people than you think . According to WHO in 2020 there are 2.2 billion people with impaired vision. Of these, 300 million people are affected by colour blindness in various forms. And for this reason, designers should definitely think about colors and contrasts. With little effort, the accessibility of a page can be massively improved. . . Give your site enough contrast . According to the W3C guidelines, the contrast of text of normal size (approx. 13px - 17px) must have a contrast ratio of at least 4.5:1. From 18px and larger font sizes, the text must have a contrast ratio of at least 3:1. . Graphic objects and UI components should generally have a contrast ratio of 3:1. . There are countless tools for checking the contrast of elements and text, one of my favourite tools is the Colour Contrast Analyser from the paciello group. . The following example shows what effect a carefully chosen contrast has on the page: . On the left side, the User Interface (UI) does not conform to any Web Content Accessibility Guidelines (WCAG) standard, while on the right side it conforms to the WCAG AA standard. . . Do not make information dependent on their colour . To understand what exactly is meant here, let’s look at a typical example of a common error of information and dependence on colour. Everyone knows system status messages or error messages. . . Users with a common form of colour blindness, for example the inability to distinguish between the colours red and green, see this example as follows. . . By adding an icon and text, the colour dependency is resolved and the user knows more quickly what this scenario is about. . .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules/colours/",
    "relUrl": "/docs/design-rules/colours/"
  }
  ,"9": {
    "title": "Consistency",
    "content": "Consistency . A consistent design that is used throughout the system gives the user a feeling of confidence when working with the system. But what exactly does this mean and what do I need to consider? . Consistency and standards . Aesthetic and minimalist design . . . Same appearance same function | Colours Primary colours | Secondary colours | | Positionings | How can I achieve a consistent design? | . Same appearance same function . Elements with the same appearance should always have the same function. This is important for users who are not familiar with the system or for people with disabilities. . The following examples illustrate the problem of inconsistent use of elements: . . . . Colours . Colours are an important design tool when it comes to the usability of a page. We can use colours to highlight interactive elements, brand the website or highlight information. It makes sense to use a strict colour system. Generally we can separate the page into 2 colour systems. See also chapter Colours to get more detailed informations about colours. . Primary colours . Primary colours are essential colours in our design system. This includes colours like: Text colour, interaction colour, white and branding colour. These colours are exclusive and are only used for the intended purpose. They allow users with impaired vision to better navigate. . Secondary colours . Secondary colours are used to design the page, for example within illustrations or graphics. But backgrounds can also be defined in this colour category. In general, it should be noted that these differ enough from the primary colours. And that they have enough contrast. . The following examples illustrate the problem of inconsistent use of colors: . . . Positionings . Certain elements have established their position on a website and should be retained. These include navigation and footer. As a general rule, it should be ensured that elements once placed are consistently placed in the same position on all other pages. This allows users with screen readers or users with disabilities to use familiar patterns. . . . How can I achieve a consistent design? . A consistent design across all breakpoints and screens can only be achieved with a detailed design system. Even if I as ux-designer do not work with other designers, it makes sense to create one. I can work on a solid basis during the whole design process. . . . Links . W3C – Consistent Navigation W3C – Use of Color W3C – Contrast .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules/consistency/",
    "relUrl": "/docs/design-rules/consistency/"
  }
  ,"10": {
    "title": "Content and language",
    "content": "Content and language . The right choice of words is essential when it comes to accessibility. . Match between system and the real world . Help and documentation . . . . Who needs accessible language? | What is accessible language? Understandable Content | Easy-to-read | | Which language is the right one for my site? | How can I simplify content | . Who needs accessible language? . As soon as people are confronted with a topic that is more complex than the environment they normally find themselves in, accessible language is useful. . For example: . Users who have to take care of their insurance needs. | When people use online banking. | When people have to follow technical instructions. | People who have to speak a foreign language. | . . What is accessible language? . We speak of easily accessible language whenever we need to describe a topic in a simplified way to make it more understandable to a wider audience. Therefore it is important that we enable all users to understand the content of a page. Generally we can define two categories of accessible language. . Understandable Content . To make content accessible to a wider range of users, including people with reading difficulties, it is simply a matter of avoiding technical terms. Technical terms require prior knowledge in most cases. This should never be assumed. . Easy-to-read . But sometimes it is not enough to avoid technical terms. There can be various reasons for this: . When medical information is made available to a broad public, technical terms are often avoided. Nevertheless, people with reading disabilities or other disabilities may find it difficult to understand such texts. . | People who are not fluent in a foreign language find it difficult to understand a text even if technical terms are not included. . | . In such cases it is advisable to prepare the content in simple language. Simple language translates topics aimed at a specific target group. The content is reduced and supported with illustrations or pictures. This way, even people with disabilities can understand complex topics. . . . Which language is the right one for my site? . Content should always be reproduced as simply as possible. This improves the user experience for all users. The choice of the language used on a page depends on the target audience. Although my content is aimed at experts with specialist knowledge in their field, there may be people in this target group who have difficulty understanding large and complex amounts of text. . If I define my target group specifically, technical terms can be used without problems. | As soon as my content is aimed at a wider audience, technical terms should be avoided. | As soon as my offer is clearly directed at a target group that has limitations in understanding text, simplified language should be offered as an option. | . . How can I simplify content . Short paragraphs and sentences make it easier to read. | Avoid technical terms. | Expand acronyms. For Example, Rich Text Format (RTF). | Format and structure your text. See chapter Semantics | Use illustrations, icons and pictures to make your content easier to understand. | Describe concrete examples, this makes it easier for many users to understand the content. | . . Links . W3C – Understandable Content W3C – Writing for Web Accessibility .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/Architecture/content-and-language/",
    "relUrl": "/docs/Architecture/content-and-language/"
  }
  ,"11": {
    "title": "Context",
    "content": "Context . When we talk to a person face to face, content is often put into context. In this way misunderstandings can be avoided. The same is applicable to content on the web. If the context is not given, users cannot classify the meaning of individual elements. . Consistency and standards . Recognition rather than recall . Aesthetic and minimalist design . . . . Why the context on a website is important | Set titles, everywhere | Make meaningful labels | Active and inactive status | . Why the context on a website is important . Page titles are essential to enable all users to quickly identify the content of a website. On the one hand, pages must be marked with the &lt;title&gt; element, so that pages in browser tabs can be quickly identified. On the other hand it makes sense to give each page a content describing &lt;h1&gt; title (main title), so that people with visual impairments or with memory weaknesses can put the pages into context faster. . The following examples illustrate the importance of context: . TBD. . TBD. . . Set titles, everywhere . That means for us as designers, titles are essential to improve the usability of a website. Therefore it makes sense to give each new section of a website or app a title that is appropriate to its content, in addition to the &lt;h1&gt; title. This has the following advantages. . Blind users notice the change to a new section within a page and can associate the content. | Users who navigate using the keyboard can easily skip from one section to another. | The risk of creating misunderstandings on the site through unclear sections is minimized. | . TBD. . . Make meaningful labels . Not only pages and sections need titles that match the content. Also for links and buttons it is important that they show the action behind them. So all users and especially blind users can skip links that are not interesting for them. . The following examples illustrate the importance of meaningful labels: . More Start . For the user such labels are meaningless, even in the context of the content it is difficult to see what is behind the button or link. It should be avoided that the user has to read additional text to understand simple buttons and links. . Learn more about accessibility start your project now . With a content describing label it is now clear what kind of action is behind the button or link. The user can even see what is triggered by the elements without reading the content. This is useful for people who navigate through a page with a screen reader. . . Active and inactive status . It is also a matter of context if we only show certain contents of a page by interaction. The user must be able to determine the connection between trigger and appearing content at any time. Active elements should therefore always be highlighted. See also chapter Nested content to get more detailed information on this topic. . TBD. . . Links . W3C – Page Titled W3C – Section Headings W3C – Link Purpose W3C – Accordion .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/Architecture/context/",
    "relUrl": "/docs/Architecture/context/"
  }
  ,"12": {
    "title": "Dark mode",
    "content": "Dark mode . TBD. . . . TBD | TBD | . TBD . TBD . . TBD . TBD. .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules/dark-mode/",
    "relUrl": "/docs/design-rules/dark-mode/"
  }
  ,"13": {
    "title": "Decorative elements",
    "content": "Decorative elements . TBD. . . . Decorative elements are not bad | Do not disturb the UI | Do not override other functions | . Decorative elements are not bad . TBD . . Do not disturb the UI . TBD . . Do not override other functions . TBD .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules/decorative-elements/",
    "relUrl": "/docs/design-rules/decorative-elements/"
  }
  ,"14": {
    "title": "Design rules",
    "content": "Design rules . Accessible design is not as complicated as many people think. If basic rules are followed, the design can prevent many hurdles for people with disabilities. The following chapters cover the most important rules that must be observed. .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules",
    "relUrl": "/docs/design-rules"
  }
  ,"15": {
    "title": "Expectations",
    "content": "Expectations . TBD. . . . Learned behaviour of elements | Do not lie to the user | . Learned behaviour of elements . TBD . . Do not lie to the user . TBD .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules/expectations/",
    "relUrl": "/docs/design-rules/expectations/"
  }
  ,"16": {
    "title": "Icons",
    "content": "Icons . When it comes to icons, different specifications must be observed. Not all icons are self-explanatory or designed for small applications. . Consistency and standards . Aesthetic and minimalist design . . . Signs and communication Understanding icon | Understanding index | Understandning symbol | Understanding icons in UI | | Icons in UI Icon labels | Icons contrast | Icons for small applications | | . Signs and communication . So that we can take a closer look at the topic of icons and analyze them for accessibility. First we have to understand what an icon is. This definition is actually not as simple as it seems. Charles S. Peirce, a philosopher of the late 19th century defined 3 basic signs in semiotics: the icon, the index and the symbol. . . Understanding icon . An icon resembles the object it stands for and thus establishes a connection to it. The following example illustrates this. . A classic icon from the field of user interface design is the mail icon. It shows a letter and creates the link to the physical letter and the sending of a message. . . Understanding index . An index indicates what it stands for, the classic example is smoke which stands for fire. . TBD. . . Understandning symbol . The symbol makes no clear connection to its origin. The meaning often has to be learned culturally, which means that prior knowledge is needed to understand symbols. A good example of this are religious symbols, which are not self-explanatory for all people at first go. . TBD. . Understanding icons in UI . Now that we have defined the basics, it is time to transfer them into the user interface design. Icons are elementary components of user interfaces. We can label functions using established icons or simplify contents through supporting icons. In the beginning of the user interface design we tried to design these icons as close as possible to the original. . In this picture we see the famous System 7 from Apple. Folders look like folders and the trash can looks like a trash can. Wikimedia – Apple . And now we also see that at some point we reach a limit with icons as defined by semiotics. We cannot display complex processes like a “login” or “file sharing” exactly as it is meant. That’s why in the UI we rather speak of symbols which are used as icons. . . Icons in UI . Icons in user interface design are to be considered as symbols and sometimes require prior knowledge. There are various icons that have established themselves and now stand for themselves. . Search icon | Navigation bars | User icon | Close icon | . Icon labels . If icons that are not self-explanatory are used as interaction elements, they should always have a label that explains their function. . We see here two times the same interface, once with labels and once without. It is immediately clear that the interface with label is more user-friendly. Not only for users with disabilities it’s much easier to use the interface with labels, but for all users. See also chapter Context to get more detailed informationabout meaningful labels. . Icons contrast . For UI components and graphical objects, WCAG requires a contrast ratio of at least 3:1. If icons are used as interaction elements, for example in navigation, a contrast of 4.5:1 is recommended. Since the icons in navigation must be aligned with the navigation labels. See also chapter Colours to get more detailed information about contrast. . There are countless tools for checking the contrast of elements and text, one of my favourite tools is the Colour Contrast Analyser from the paciello group. . Icons for small applications . Icons are well suited to make the interface more understandable. One challenge is to design icons for all device sizes. It is recommended to adapt the icons for each viewport to ensure that they are always recognizable for all users. This helps people with visual disabilities to find their way around. . Icons are usually formatted as follows: . 32/32px ore more | 24/24px | 16/16px | 8/8px for small sizes | . TBD. . TBD. . . Links . W3C – Non-text Content W3C – Contrast W3C – Images of Text .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules/icons/",
    "relUrl": "/docs/design-rules/icons/"
  }
  ,"17": {
    "title": "Home",
    "content": "👋 Welcome to the Accessibility Designer Guide! v1.0 . Last Update: 18.06.2020 . If you are interested in barrier-free design and you need design guidelines to support you during the process, then you have come to the right place. . . About this guide . In this guide I try to answer as many questions as possible about Accessibility Design based on existing guidelines W3C and my personal experience. Before you jump into the topic you should know that this guide is limited to design only and does not cover the topic of code. It does partly relate to code, but only superficially. . . Contributing . When contributing to this repository, please first discuss the change you wish to make via issue, email, or any other method with the owners of this repository before making a change. Read more about becoming a contributor in our GitHub repo. .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/",
    "relUrl": "/"
  }
  ,"18": {
    "title": "Keyboard friendly",
    "content": "Keyboard friendly . We usually use the mouse or trackpad to navigate around a website. But not all users can use a website in the way we as designers often imagine. . Consistency and standards . Flexibility and efficiency of use . . . Why it is important | Focus indicators | Structure of the Page | Skip buttons and hidden keyboard features | . Why it is important . Users with disabilities often use the keyboard to navigate on a page. In general, a website should be operable with the keyboard without any restrictions. In most cases it is the task of developers or designers with code knowledge to ensure this. However, even in the design phase, some considerations can be made without code to improve keyboard accessibility and help the developers to optimize the content for keyboard use. . Focus indicators . The focus indicator of a website is a useful tool to improve the usability of the website by using the keyboard. But let’s be honest, the default focus indicators in the browser are not that great. One of the most common problems, they don’t fit into the design. Instead of removing the indicators now, they should be actively designed and planned from the beginning. Because there are possibilities to design them, which unfortunately are often forgotten by designers. . Default focus indicator in Chrome. . When it comes to designing focus indicators, the following should be considered: . The size and shape of the indicator should stand out from the current element. | The indicator should have enough contrast. | The colour of the indicator should fit into the design, but stand out clearly enough. | Make sure that the indicator looks the same on all browsers. | Be sure that the indicator can be applied to all elements. | . Here are some examples of nicely implemented custom focus indicators: . On the myswitzerland website, the focus is elegantly integrated into the design. An outline and a drop shadow serve as indicators here. This creates the impression that the focus surrounds an invisible button. . On the sbb website, the focus was less elegantly integrated, but great attention was given to usability and contrast. . . Structure of the Page . As we have discussed in the chapter on Titles and semantic, the semantic of a website, means structuring the elements on a site into clear groups based on their meaning. This can greatly improve the ease of use of the keyboard. . Structuring the Website into clear sections. . This allows the focus indicator to jump from element to element more quickly and easily. As a designer, it makes sense to design in individual elements from the very beginning, so that clear groups of elements are later developed on the page. . . Skip buttons and hidden keyboard features . A very important feature when operating websites through the keyboard are hidden keyboard features. These are navigation points which can only be reached by using the keyboard, for example we can have a closer look at the google search. After a search, we can enter the separate keyboard menu by using the tab key. This way keyboard users can skip links in the header and immediately go to the main content, this is a so-called skip button. This means that we have to plan additional space in the navigation to fit a keyboard navigation. . . Links . W3C – Keyboard Accessible W3C – Focus Visible W3C – Bypass Blocks .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/Architecture/keyboard-friendly/",
    "relUrl": "/docs/Architecture/keyboard-friendly/"
  }
  ,"19": {
    "title": "Navigation",
    "content": "Navigation . The navigation is the heart of many websites and apps. If mistakes are made there, the user experience is significantly affected. But this does not have to be the case. . Consistency and standards . User control and freedom . Aesthetic and minimalist design . . . Show me the easiest way! | Show me the site architecture Where do I want to go | Where am I | Where do I come from | | Breadcrumbs | Consistency | . Show me the easiest way! . Navigations are basically only intended to help the user find his way around the site. Therefore, as a designer, you should not reinvent the pattern when it comes to navigation. Given standards help to create a solid navigation and if the designer is aware of the rules, visually appealing results can be achieved within this framework. . . Show me the site architecture . Not only the site architecture should follow a linear flow, also the navigation should do so. Optimally, the navigation reflects the page architecture in a simplified form. This helps the user to get an overview of the content. . Where do I want to go . Highlight navigation points that are in the focus of the user. This helps users who navigate through the page with tab to find their way around.In addition, a hover effect can make navigation easier for all users. Often designers forget that the focus can also be designed. For a better orientation of the user, the hover and focus status differs in visuality from the active menu items. See Keyboard friendly. . Where am I . Show the user in the navigation where he is on the page. By marking the active menu items, the orientation on the page is noticeably improved for users. . Where do I come from . But not only the active page should be highlighted, also higher-level pages in the navigation should be highlighted. In this way, the user is always aware of where he or she has come from and where he or she is currently located. . . Breadcrumbs . In addition to navigation, breadcrumbs are excellent for showing the way of a user. Many designers tend to remove breadcrumbs for aesthetic reasons. I have a clear opinion on this and think this is a mistake. For complex websites with several navigation levels, they can make navigation a lot easier. . . Consistency . UI components with the same function should always have the same appearance. Therefore, the navigation within the entire page should have the same visual appearance and language. It can happen that a page has visually different sections, but the navigation should not be affected by this. . . Links . W3C – Bypass Blocks W3C – Page Titled W3C – Section Headings W3C – Link Purpose W3C – Multiple Ways W3C – Focus Visible W3C – Location .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/Architecture/navigation/",
    "relUrl": "/docs/Architecture/navigation/"
  }
  ,"20": {
    "title": "Nested content",
    "content": "Nested content . Additional content is used when the user should not be confronted with the whole content immediately. On the one hand the user is not overwhelmed, on the other hand the hiding of content can cause problems. . Consistency and standards . Aesthetic and minimalist design . . . Why it is problematic to nest information | How to nest content correctly Announce the content to be expected | Do not nest important functions | Display what is active | | . Why it is problematic to nest information . If content is nested by using tabs or accordions, the page appears more organized and structured. However, the complexity of the page and how to use it increases. . The following problems may occur: . Users overlook content | If unsuitable contents are nested, the usability for all users is reduced | The demands on cross-device design are increasing | For all users and special users with disabilities, the site becomes more complicated to use with screen reader and keyboard | . . How to nest content correctly . Basically nested information are not bad, correctly implemented they can improve the usability of a page. An important part is the implementation of the elements in the code. For example, the semantically correct implication: see chapter Semantics. But also in the design there are certain rules that have to be observed. . Announce the content to be expected . If content is nested, it is important to provide it with a label that describes the content. This way the user knows exactly what to expect. See also chapter Context for more informations about meaningful labels. The following example with an accordion shows this: . Due to the unclear labeling of the individual tabs the user has no chance to figure out what to expect. This is not only a usability problem for people with disabilities. . After the tabs are clearly labeled, it is clear to the user what to expect behind the functions. . Do not nest important functions . If content is nested, it should not be an essential part of the operation of the site. The operability of the site must not suffer. Otherwise it can be confusing for the users, because they cannot find important functions. . Since the CTA button is located inside the accordion, it is easily overlooked. Furthermore, for users with Screen Reader, an important function is unnecessarily nested. . Important elements should be placed on a higher level outside the nested elements. . Display what is active . If information is nested, it is important to show the user which elements are currently active. Often a colourful highlighting is sufficient, optimnally this is supported by backgrounds. This allows the user to set the content in context more easily. See also chapter Context. . the following example shows the problem . We see here a highlighting of the active tab, but it is not clear enough for all users. People with disabilities or inexperienced internet users will not recognize this element as a tab. . Through a clear subdivision of the background, the user can see more quickly what kind of pattern this is. The element is immediately recognized as tab. . . Links . W3C – Accordion W3C – Example Disclosure (Show/Hide) .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/Architecture/nested-content/",
    "relUrl": "/docs/Architecture/nested-content/"
  }
  ,"21": {
    "title": "Processes",
    "content": "Processes . If the user is in a process on the site, he puts himself in our hands. He trusts that the steps he follows will lead him to the goal. Therefore it is very important for us as designers to make this process as pleasant as possible for all user groups. . Visibility of system status . User control and freedom . Aesthetic and minimalist design . Help users recognize, diagnose, and recover from errors . . . What is the problem with processes | Guide the user Show only what is important right now | Show how easy it is | | Give the user control Give the user confirmation | Edit selection afterwards | The process can be stopped at any time | | Give feedback | . What is the problem with processes . If the user enters a process on a website or in an app, he trusts the system. However, there should never be a feeling that control has been relinquished or that errors may have consequences. . A process can pose problems for certain user groups: . Inexperienced or older users feel insecure. | People with screen readers find it hard to find their way around if processes are not implemented correctly. | People with physical impairments feel insecure if they accidentally click something wrong in a process. | . . Guide the user . The easiest way to make a process barrier-free is to take the user by the hand. By leading a process, especially users with disabilities or inexperienced users feel more secure in their actions. But what are the possibilities to design a guided process? . Show only what is important right now . We should always show only what we demand from the user. In this moment this is the most important thing for the user. Therefore we design the process in such a way that the focus is on this one current step. . the following example shows the problem . In this example, all steps are listed below each other. Although it is pointed out that the previous step still needs to be filled in, such a process is not clear to all users. . In this example we only show what is necessary and give the user the possibility to jump to the previous step if desired. For the user this screen is more clearly arranged. . Show how easy it is . To give the user even more confidence, the past, current and upcoming steps can be listed in a reduced form. This makes it clear to the user where he is at the moment. . . Give the user control . People with disabilities, elderly user or people with visual impairments can quickly make false or unwanted interactions. Therefore we should always give users the opportunity to correct their mistakes. . Give the user confirmation . For a user to feel confirmed, it makes sense to show a summary of the steps to be performed. A classic example of this is a shopping cart that is listed again, or a list of all pictures that are sent. . Edit selection afterwards . If we show the user a summary, this is ideally also editable. This allows users to correct any mistakes. . In this process the individual items can be edited or removed again. . The process can be stopped at any time . Errors happen, and people with disabilities can quickly trigger unwanted actions. It is therefore recommended that processes can be stopped at any time. The system must be as tolerant of errors as possible. . In this example the upload can be stopped at any time. . . Give feedback . TBD. See also chapter Application feedback to get more detailed information about user feedback. . . Links . W3C – Accordion W3C – Example Disclosure (Show/Hide) W3C – Input Assistance .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/Architecture/processes/",
    "relUrl": "/docs/Architecture/processes/"
  }
  ,"22": {
    "title": "Semantics",
    "content": "Semantics . The structure and dependency of the content on a website gives a product the finishing touch in accessibility. . Match between system and the real world . Aesthetic and minimalist design . . . What is meant by semantics? Semantic in text | Semantic in Code | | Semantic in Code (HTML5)– Cheatsheet | Why semantics in design helps developers Structure of the page | Correct use of the elements | | . What is meant by semantics? . Semantics is called the theory of the meaning of signs. As designers, we can give meaning to text and other elements through their appearance or positioning. In general, the appearance should support the content and not force a meaning. The following examples illustrate this. . Semantic in text . Everyone of us comes into contact with semantics in text. In typography, text has always been structured by semantic design and optimized for the reader. As an example we can look at a text without any markup. We see in this case a simple block, without any differentiation in itself. . . Just by adding spaces and breaks we can give meaning to the content. Now we see the title and basic font within the text block. . . By adding different sizes and markings in the weight of the font, we can enhance this effect. Now the text is semantically structured. The appearance of the title also gives it the meaning of a title. The same applies to the basic text, which is recognized as basic text by its appearance. . . Semantic in Code . In the code, the semantics are not as clearly visible to the user as we know it from print and typography. Although text on the web is also semantically prepared, there are many more elements that need to be marked up, text alone is not enough. In code, semantics includes all elements on a website. It is important to correctly label the elements. This has the following reasons: . Semantic code can be better read by programs. | Loading times are shortened. | Automatic tables of contents can be created. | The keyboard operation is easier. See Keyboard friendly. | Accessibility is made possible because screen readers can read the content. | . Basically, each element on the page is given a meaning in the code that corresponds to the content or function of the element. This has several advantages, especially in terms of accessibility. The semantics in the code allows screen readers to read the meaning of individual elements, allowing people with impaired vision to navigate the page. . . Semantic in Code (HTML5)– Cheatsheet . HTML 5 Meaning . &lt;h1 – h6&gt; | Titles in text. | . &lt;header&gt; | Header section oft the page. | . &lt;nav&gt; | With this you can mark a section of a page, which contains links for navigation. | . &lt;footer&gt; | Footer section oft the page. | . &lt;article&gt; | Self-contained composition in one document. | . &lt;aside&gt; | Content that indirectly belongs to the rest of the content, for example a dictionary of terms. | . &lt;details&gt; | Is used to mark up additional information, for example in a dropwdown, is often used in combination with the &lt;summary&gt; element. | . &lt;summary&gt; | Is often used to mark additional information, for example in combination with the &lt;details&gt; element. | . &lt;figure&gt; | An element that often explains itself graphically. For example a picture. The corresponding descriptive element is the &lt;figcaption&gt; element. | . &lt;figcaption&gt; | Describes the content of the related &lt;figure&gt; element. | . &lt;main&gt; | This can be used to mark the primary content of a page. for a blog post this would be the main text. | . &lt;mark&gt; | This can be used to identify highlighted text. | . &lt;time&gt; | This can be used to mark times or specific dates in the text. | . . Why semantics in design helps developers . If you are a designer without any code knowledge and now think that this is the job of the developers, you are right, but also not. Correct is, it is the task of the developers to implement the code semantically correct. However, if semantic code principles are followed in the design, the implementation is much easier later in the code. The following principles should be followed: . Structure of the page . Make sure that your design can be categorized into the common areas. Clear areas on your site simplify the structure for developers. . . Correct use of the elements . Use elements correctly and do not complicate your design unnecessarily. An example is overloaded overlays or multi-level nesting in dropdowns. . . Links . developer.mozilla – semantics w3schools – HTML Semantic Elements W3C – Using semantic elements to mark up structure .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/Architecture/semantics/",
    "relUrl": "/docs/Architecture/semantics/"
  }
  ,"23": {
    "title": "Support through the system",
    "content": "Support through the system . People with disabilities tend to trigger wrong actions more often than users without disabilities. Therefore it is helpful to plan the system in such a way that mistakes can be avoided already in their beginning. . Error prevention . Help users recognize, diagnose, and recover from errors . . . Error avoidance through restrictions | Error avoidance through support | Error avoidance through repetition | Not all options are always available | . Error avoidance through restrictions . One possible way to avoid errors is to limit the user’s options. By limiting the input possibilities, the error rate of a system is reduced. For users with limitations, it is more clear what is required of them. . In this example with a date, the format of the input is already predefined, plus only the input of numbers is allowed. . . Error avoidance through support . Not only when users are disabled, it can happen that errors are created while information is being entered. This should not be a problem for the user, as a good example of this, searches should be considered. Often suggestions are made while typing. These suggestions also correct typing errors. This avoids empty search results. . The automatic search completion reduces the chance of errors during input. . . Error avoidance through repetition . By repeatedly requesting information, the user is forced to verify the information entered. In addition, the system can detect errors by comparing the information and alert the user. . A good example of this is repeating e-mail and password. This helps to avoid errors when creating accounts. . . Not all options are always available . Certain actions are dependent on other factors. For example, as a private user I need other input fields like an organization. Therefore it makes sense not to display them for both users. It is better to separate both input variants. For example with a radio button. This way the user is not overwhelmed with too much information. . Another example are inactive elements that only become active once everything has been recorded. This way the user knows that he can now proceed to the next step. . . Links . W3C – Input Assistance W3C – Error Identification W3C – Error Prevention .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/Architecture/support-through-the-system/",
    "relUrl": "/docs/Architecture/support-through-the-system/"
  }
  ,"24": {
    "title": "Targetsize",
    "content": "Targetsize . The target size of buttons, links and other clickable elements is an important factor when it comes to accessibility. But what needs to be considered? . Consistency and standards . . . What is the problem with the target size? | Give clickable elements enough space | Basic rule | Mobile and Desktop | . What is the problem with the target size? . TBD . . Give clickable elements enough space . TBD . . Basic rule . TBD. . . Mobile and Desktop . TBD. . . Links . W3C – Target size .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules/targetsize/",
    "relUrl": "/docs/design-rules/targetsize/"
  }
  ,"25": {
    "title": "Typography",
    "content": "Typography . Fonts affect the appearance of a website like no other element. It is therefore not surprising that they also have a great influence on usability. . . . Print also works digitally | Fonts sizes For print | For web | | Line height | Text width Width values | | Colors | Levels of the titles | Do not use text as image | . Print also works digitally . For centuries, typefaces have been refined by type designers, typographers and designers. Many specifications that work for print can also be transferred to the web and can increase the usability of a page. . Fonts sizes . From classical typography we know a clear classification of font sizes, 3 categories have been established: . For print . The consultation size: 6 - 8 point (annotations, margin notes, captions, lexicon entries) | The reading size: 9 - 12 point (larger texts) | The sight size: 14 - 28 point (titles) | . This rule of thumb has proven itself and helps to structure texts in print in a way that is pleasing to the eye. Of course, this rule can also be broken, but to break a rule, one must first know it. . Personally, I always have this rule in mind when I have to develop font sizes for digital products. They are well suited to create a harmonious typeface on the web, but point values cannot simply be adopted 1:1 for pixel values. The following rule serves as a good basis for a typographic system: . For web . The consultation size: 13 – 14px | The reading size: 16 - 20px | The sight size: ca. 24px – to the top without limit | . In general, fonts on the Web should not be smaller than 13px, but if this should happen, it is mostly decorative elements that do not serve the UI or there must be a really good reason to fall below this value. . . Line height . A carefully chosen line height not only helps users with disabilities to understand text faster. The line height varies from font to font and is dependent on the line length and the visual appearance of the font. Still, there are certain basic rules that can help to define a line height that is comfortable for the eye. . As a rule of thumb, the line height should be 120% of the font size, which means at least 12px line height for a 10px font. | The line height should always be clearly larger than the word spacing. | . . Text width . The web is often very generously designed and the complete viewport width is often used. However, a certain part of a website should have clear limitations, and this includes copy text. If the width is too large and the number of characters per line is too high, the eye loses its orientation. This makes it difficult to read texts, not only for people with disabilities. The following example shows this clearly: . . In print, a rule of thumb is 60 – 80 characters per line. I personally like to have a value of 500 – 700 pixels for copy text in the width on a website. This comes pretty close to the rule for print Depending on font and font size. In the end it is a combination of all values that results in a harmonious and pleasantly readable typeface. . . Width values . Desktop: 500 – 700px | Tablet: 500 – 700px | Mobile: full width | . Colors . According to the W3C guidelines, the contrast of text of normal size (approx. 13px - 17px) must have a contrast ratio of at least 4.5:1. From 18px and larger font sizes, the text must have a contrast ratio of at least 3:1. . There are countless tools for checking the contrast of elements and text, one of my favourite tools is the Colour Contrast Analyser from the paciello group. . Check Colours to learn more about colours and contrast. . Levels of the titles . TBD . Do not use text as image . Everyone should be aware of it, and yet it keeps popping up. Text that was placed in a header image in Photoshop and is now available as an image (jpeg or png) on the website. A mortal sin in terms of accessibility. Screen readers have no chance of reading this text unless it is added with alt text. However, I recommend not to do this. .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules/typography/",
    "relUrl": "/docs/design-rules/typography/"
  }
  ,"26": {
    "title": "Website architecture",
    "content": "Website architecture . Simple, short and logical ways within the site increase the usability not only for people with disabilities but for all users. But what do you have to consider when creating a website architecture? . Consistency and standards . . . Do not use too many link sections | Multiple ways | . Do not use too many link sections . People with visual impairments navigate through a website with a screen reader, and if teasers and links are repeatedly inserted into relevant content, this can severely impair the user experience. Since users with screen readers cannot simply ignore irrelevant content or ignore it later. It is better to include such sections at the end of a page, so that users with screen readers can also ignore them. . . Multiple ways . A content-relevant page should be accessible via several ways within a page architecture. For example, a page can be accessible via a teaser in addition to the navigation. Ideally, there should be several content hubs within a page architecture which only serve to guide the user to his destination. These can be seen as an extension of the navigation and therefore do not disturb users with screen readers. This can help people with cognitive and visual impairments to find content faster. . Good to know . Pages that only serve to redirect the user to other pages should not contain relevant content. Since they do not have to be visited to navigate the site. Additionally, link-heavy sections in a content-relevant page disturb the user experience with screen readers. . . Links . W3C – ARIA Developer Mozilla ARIA .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/Architecture/website-architecture/",
    "relUrl": "/docs/Architecture/website-architecture/"
  }
  ,"27": {
    "title": "Why it is important",
    "content": "Why it is important . Accessibility has become increasingly important in recent years. Due to the increasing digitalization in all areas, more and more people are using digital solutions. Nevertheless, the approach “Internet for all” is still not lived enough. . . . . It affects us all | There are people with disabilities in every target group | The user experience is improved for all users | Accessible design does not have to be boring | . It affects us all . For me as a UX designer, accessibility is an extremely important topic. On the one side the developers and the code can improve a product enormously in terms of accessibility. On the other side is the design part, which also has a big impacts on accessibility. As designers we have the power to help create the internet for everyone. . According to the WHO, over 1 billion people worldwide suffer from some form of disability. Not all of them can use digital solutions, but for those who can, we should make it as easy to use as it is for us. . . There are people with disabilities in every target group . . Often the question also arises, do people with disabilities even belong to our target group? This question can be answered with yes. People with disabilities make up a large percentage of the population. Excluding these people from your services is questionable, not only from a business point of view. It is also a questionable decision from a human perspective and does not contribute to a good company image. . . The user experience is improved for all users . If a website or app is designed and developed with the mindset “Accessible for all”, the experience is improved not only for people with disabilities. UX and Accessibility Design do not know any strict boundaries, a well thought-out UI design and barrier-free programming improves usability across all target groups. . . Accessible design does not have to be boring . A prejudice that can be heard again and again is that accessible design is boring and restricts creativity. I am always surprised about this attitude, is UX-Design really just “fancy digital product design”? For me it is rather the identification of problems and solving them. This does not mean that the solution cannot be aesthetically pleasing. But there is more to a well-balanced digital product than just making it beautiful. There is a strategy behind it for the architecture, for the content, for the code and a for the design. Besides, the principles of accessible design should be kept in mind by many more designers, so some questionable decisions would not be made in the first place. .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/accessibility-in-general/why-it-is-important/",
    "relUrl": "/docs/accessibility-in-general/why-it-is-important/"
  }
  
}