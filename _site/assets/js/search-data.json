{
  
  "0": {
    "title": "10 Heuristics of Jakob Nielsen",
    "content": "10 Heuristics of Jakob Nielsen . If there is such a thing as a generally accepted guide to good usability, then these are the 10 interaction design principles of Jakob Nielsen. If the heuristics are followed from the beginning, many accessibility problems can be avoided. . . . . 1. Visibility of system status | 2. Match between system and the real world | 3. User control and freedom | 4. Consistency and standards | 5. Error prevention | 6. Recognition rather than recall | 7. Flexibility and efficiency of use | 8. Aesthetic and minimalist design | 9. Help users recognize, diagnose, and recover from errors | 10. Help and documentation | . 1. Visibility of system status . Nothing is more annoying than a process that the user cannot understand. The system should always give the user feedback in a reasonable amount of time and inform him about what is happening. By providing clear feedback on the status of the system, people with disabilities will feel more secure while using the system. . . In this example the user is immediately shown that the sending is in progress. Also the progress of the process is shown to the user. Through this feedback the user knows that everything works. . . 2. Match between system and the real world . In order for the interface to speak the language of the user, it is important to use familiar patterns. Shapes from the real world which can be transferred into the digital interface can increase the usability significantly. . . In this example we see a boarding pass, it makes sense that we do not change its appearance. The user knows where to find his information on a printed boarding pass. Another example are credit cards in apps. . . 3. User control and freedom . Incorrect functions of a system are quickly selected, we should always and at any time give the user the opportunity to abort a process as easy as possible. This can especially help people with disabilities if they accidentally activate a wrong function in the system. . . . 4. Consistency and standards . A very important point to improve the accessibility of a site. Same appearance and same wording should always mean the same function. . . To ensure consistency across the entire project, you should always create a design system. This makes it easier to use the same elements across all screens. . . 5. Error prevention . Through the appearance of the elements and their positioning, errors can be avoided right from the start. This can reduce the error rate when using the system and at the same time increase accessibility. . . In this example, the user is shown suggestions while typing, even though he has misspelled the term. This avoids an unnecessary search without result. . . 6. Recognition rather than recall . The user should never have to remember relevant information across multiple interactions. The design should always demand as little background knowledge from the user as possible. Options and actions should always be visible. The system should support the user in this, so the accessibility of a page can be increased. . . A good example is a font selection menu. No one can ask the user to know the visuality of all fonts by memory. Therefore their visuality is already shown in the menu. . . 7. Flexibility and efficiency of use . The system should be customizable for experienced users. So they can use tools and shortcuts to work with the system faster and easier. For inexperienced users or people with disabilities, the lack of use of such tools should not affect the process. . . In this example the common shortcuts of programs are shown, these can be used via the keyboard or via the navigation. . . 8. Aesthetic and minimalist design . Dialogues should be reduced to the essential. The usershould only be shown what is relevant for him. This increases the usability of a page by a screen reader significantly. . . As a good example of this, login screens can be considered. Optimally, there is nothing else on such a screen but elements that are needed for the login. Also search engines are a good example, google reduces its home page to the essential. Nothing more than a search box is needed. . . 9. Help users recognize, diagnose, and recover from errors . Error messages should be described as simply as possible and should not contain any code. Suggested solutions help the users to solve the problem. . . By marking the incorrect input field and the clear message that describes the error, the user knows exactly what to do. . . 10. Help and documentation . Even if a system should be self-explanatory, it is helpful to have a simple and quick guide. . . . Links . Nielsen Norman Group – 10 Heuristics .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/accessibility-in-general/10-heuristics/",
    "relUrl": "/docs/accessibility-in-general/10-heuristics/"
  }
  ,"2": {
    "title": "Certification",
    "content": "Certification . Accessibility is not just nice to have, it is often obligatory and is certified. . . . Table of content . When is it my duty to be accessible? | The standards The A-Standard | The AA-Standard | The AAA-Standard | | POUR – Perceivable, Operable, Understandable, Robust Perceivable | Operable | Understandable | Robust | | . When is it my duty to be accessible? . When websites or digital systems are developed for public authorities, accessibility is usually required by law. The site must either be completely barrier-free or a barrier-free alternative must be offered. The standard that must be met is usually the AA standard. . . The standards . These standards are specified by the Web Content Accessibility Guidelines (WCAG), which distinguish between 3 levels of accessibility. . The A-Standard . The A standard is the minimum accessibility standard. Basic requirements such as contrast must be observed. The code must be implemented correctly so that the supporting technology can read and interpret the page. . The AA-Standard . There are already many things to consider here, for example, navigation via the keyboard must be possible. Also the assisting devices must be able to read the page, and the page must be displayed in a simpler form. To mention just a few points. . The AAA-Standard . The AAA standard must meet all requirements of the A and AA standards. All content must be accessible in simplified language. And audio transcription is required. . A detailed checklist can be found under ch.ch made by “Autorengruppe Accessibility Checkliste 2.0”. . . POUR – Perceivable, Operable, Understandable, Robust . But how is accessibility actually assessed and certified? For this purpose the website is evaluated in 4 categories. . Perceivable . Information and components of the user interface must be presented to users in such a way that they can perceive them. . Operable . Components of the user interface and navigation must be operable. . Understandable . Information and the operation of the user interface must be understandable. . Robust . Content must be robust enough to be reliably read by a wide range of user agents, including assistive technologies. . . Links . Web Content Accessibility Guidelines (WCAG) ch.ch .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/accessibility-in-general/Certification/",
    "relUrl": "/docs/accessibility-in-general/Certification/"
  }
  ,"3": {
    "title": "Gestures",
    "content": "Gestures . Gesture controls are becoming increasingly popular and allow experienced users to quickly navigate through webistes and apps. But not everyone understands such navigation options. . Flexibility and efficiency of use . Consistency and standards . . . . Understanding gestures Desktop | Mobile | | Making alternatives visible | . Understanding gestures . A gesture control is everything that goes beyond the normal clicking. Therefore, this term must not only be reduced to mobile and touch, but gesture control can also occur on the desktop. . Desktop . The following gesture controls can occur on the desktop: . drag to interact | scroll to interact | hold to interact | . Mobile . The following gestures have become established on Mobile: . swipe to the left | swipe to the right | swipe up | swipe down | 3D touch | zoom | rotate | double tap | . . Making alternatives visible . Gestures are basically no problem, they help power users to find their way around the system more quickly. However, a click variant should always be offered. This also helps people with disabilities to use the system. . In this example you can use swipe back in the app to switch to the last screen. Additionally a back button is placed on the screen to show a visual alternative. . Links . W3C – Pointer Gestures Google – material design documentation .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules/Gestures/",
    "relUrl": "/docs/design-rules/Gestures/"
  }
  ,"4": {
    "title": "Accessibility in general",
    "content": "Accessibility in general . Every seventh person in this world is disabled or has a limitation in the way they interact with their device. Therefore it is important that we as UX designers understand what accessible design means and how we can integrate it into our projects. The following chapters should help you to understand accessibility design in general. .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/accessibility-in-general",
    "relUrl": "/docs/accessibility-in-general"
  }
  ,"5": {
    "title": "Animations",
    "content": "Animations . Animations and transitions are a popular way to give a page or app a special touch. However, there are some accessibility rules to follow. . Consistency and standards . . . . The problem with animations | Blinking and hectic animations | Let people control motion effects | Do not make content dependent on animations Attention must be paid to the following: | | Animations do not have to be bad | . The problem with animations . Moving or blinking elements can attract the attention of users, but they can also distract them. In extreme cases, someone may have a seizure or physical reaction to an animation. Therefore, it is important to know the WCAg standards for animation. Warnings alone are not enough, because they can be overlooked. . For the following users hectic animations can be problematic: . People with lack of concentration. | People suffering from epilepsy. | People who have impaired vision and therefore do not notice the animations pointing to something. | . . Blinking and hectic animations . Animations on a website should not be hectic or blinking fast. The W3C – Three Flashes guidelines prescribe the following rule. Content should not blink more than 3 times per second. This prevents the animation from triggering a seizure or physical reaction. . . Let people control motion effects . Automatic playing of videos and animations should never be used. A control button should always be used. The user should always have the possibility to trigger animations or videos by himself. . Reduce Motion . For example, Apple offers a “Reduce Motion” mode so that users can use an app without restrictions.Apple recommends the following specifications: . Tighten springs to reduce bounce effects or track 1:1 with the user’s finger | Avoid animating depth changes in z-axis layers | Avoid animating into or out of blurs | Replace a slide with a fade to avoid motion | . Source: Apple – Motion . . Do not make content dependent on animations . An app or website should always be operable without animations. . Attention must be paid to the following: . Do not nest content in animation so users have limited time to read it. | Do not combine essential interactions with hectic animations. | Animations should be used carefully and have a consistent language throughout the system. | . . Animations do not have to be bad . Supporting animations can help users to find their way around a system easily. A good example is the Apple toolbar in MacOS. By gently enlarging the tools, attention is drawn to the active tool. Another good example are “tutorial” animations that help users. . In this example of the SBB app, a useful animation explains the app to the user. . . Links . W3C – Three Flashes W3C – Seizures and Physical Reactions W3C – Seizures and Physical Reactions Apple – Motion .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules/animations/",
    "relUrl": "/docs/design-rules/animations/"
  }
  ,"6": {
    "title": "Application feedback",
    "content": "Application feedback . Through feedback we receive confirmation of our actions within a very short time. Digital systems have to communicate with their users in order to confirm their actions. . Visibility of system status . Match between system and the real world . Error prevention . Help users recognize, diagnose, and recover from errors . Help and documentation . . . . What is the problem if the feedback is missing? | Error message Avoid technical terms | Offer help | Immediate error feedback | | General error messages (404) | Success message | Confirmation message | In progress message In progress | Pending | | Status messages | . What is the problem if the feedback is missing? . For all users it is confusing when the system completes an interaction or process without feedback. On the one hand you get the feeling that something has not worked. On the other hand, the user is not sure if the process took place at all. For users with disabilities who quickly make mistakes when using websites this is a accessibility problem. . This can be a problem for the following users: . Users who depend on screen readers and therefore need feedback from the system | Inexperienced or older users feel insecure | People with physical impairments feel insecure if they accidentally click something wrong | . . Error message . Error messages are an important tool to give the user direct feedback on his action. But what do I have to consider so that error messages are useful and accessible for the user? . Avoid technical terms . In order to make error messages barrier-free, technical terms should be avoided. This makes it easier for people with impairments and reading difficulties to recover from errors. See also chapter Content and language to get more detailed information about accessible language. . Offer help . So that users can recover quickly from an error, not only an error message should appear. In addition, solutions should also be shown and, if necessary, quick-links and FAQs should be listed which could solve the problem. This shortens the search for a solution and people with disabilities have to search less on the site for solutions. . Immediate error feedback . another way to communicate with the user is through direct and immediate feedback. Errors can be avoided already during the input of information. See also chapter Support trough the system to get more detailed information about error prevention. . Input . Input fields are well suited for direct feedback. Through the immediate feedback and a correspondingly descriptive error message, the user immediately knows what was done wrong. This avoids mistakes during data entry and gives people with disabilities more confidence when using the system. . Through the direct feedback and the highlighting of the error, the user knows where the mistake has been made. . Processes . If processes fail, they must also generate an immediate feedback. It should be noted that these are linked with suggested solutions or links to the FAQs. . On wetransfer the user is informed that he has exceeded the allowed amount of data. At the same time he will be shown how he could still send such a large amount of data. . . General error messages (404) . General error messages such as a “404 message” should not contain technical terms and should also contain further links. Useful for disabled users is a “back to home” button. This gives them an easy way back to the original page. . On digitec the error message is supplemented with a “back to last page” and “back to home” link. This is very useful for users with keyboard navigation or a screen reader. The customer service is linked directly to provide direct support for users. . . Success message . Along with the error messages, success messages are just as important to give a user confidence. Just like error messages they are important for users with disabilities to check their input. . Input . Input fields are very well suited to confirm successful input. By confirming the e-mail format or the successful password retype, many errors in their creation can be avoided. . On github the input fields are immediately checked for the correct format. . Processes . Processes can give successful immediate feedback. For example, sending a message can be indicated as successful, or transferring money can generate successful feedback. This gives inexperienced users or users with disabilities confidence in using the system. . On whatsapp the sending of a message is immediately provided with a feedback. Successfully sent, sent and received and sent and read. This way the user knows that the message has been successfully sent. . . Confirmation message . In order to give users even more confidence in using the system, the system should ask the user before important actions if the action is really wanted. This is important for users with disabilities, as they can quickly trigger a wrong action. . The system asks the user if they really want to delete the file. . . In progress message . Sometimes a process cannot be completed immediately. If this is the case it is important to mark it properly. This way, users can be sure that the process is running and the system has not crashed. . The following processes can be an example of such a case: . Insurance: documents are being processed by the agent. | Sending files: the upload takes 10 minutes. | Post: tracking of a parcel | . We can separate longer lasting processes into 2 categories. . In progress . The process takes longer, but will be completed in the near future. As an example, this can be the upload of a large file. Here it is important to show the user the remaining duration and the current status. If such a process is executed in the background, the user is confused. It is also important to give the user the possibility to cancel such a process at any time. This helps users with disabilities, if they have triggered a wrong action. . In this example the user is immediately shown that the sending is in progress. Also the progress of the process is shown to the user. Through this feedback the user knows that everything works. . Pending . The process takes several days or weeks. For example, the processing of a document submitted online to the insurance company. Here it is important to display the current status in detail, so that the user can be sure that his or her request is being processed. Frequent updates ensure that inexperienced users or users with disabilities can handle the system with confidence. . Feedex and many other delivery services allow the user to track the status of his delivery over a longer period of time. . . Status messages . System messages are an important feature for users with a screen reader to see what is happening on the website. . Examples for system messages: . A user stores a link via a button in his clipboard. A short appearing snackbar shows the successful copying of the link. | A user does not want to be disturbed and sets his status to “do not disturb”. The status changes immediately. | An item is added to the shopping cart and a short snackbar confirms this. | . It is important that such system messages are displayed long enough to be read by a screen reader or a person with impaired vision. You should also not disturb or interrupt the current session. . 20min communicates with the user via a snackbar and gives direct feedback to the user. . . Links . W3C – Input Assistance W3C – Error Identification W3C – Error Prevention W3C – Status Messages .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/Architecture/application-feedback/",
    "relUrl": "/docs/Architecture/application-feedback/"
  }
  ,"7": {
    "title": "Architecture",
    "content": "Architecture . The architecture of a website is the key to a barrier-free website. The following chapters describe basic topics that are important in the early stages of a project. If these principles are followed, many accessibility problems from a design point of view can be avoided. .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/architecture",
    "relUrl": "/docs/architecture"
  }
  ,"8": {
    "title": "Colours",
    "content": "Colours . When it comes to colors, many brands prescribe a color palette based on the existing ci. However, if the colours are not optimised for the web, there is a risk of accessibility problems. . . . . It affects more people than you think | Give your site enough contrast | Do not make information dependent on their colour | Determine the primary and secondary colours Primary colours | Secondary colours | | How to create a barrier-free colour scheme? Define the shades of gray | Define a background | Define the colors | | But what if the customer specifies the colours? | . It affects more people than you think . According to WHO in 2020 there are 2.2 billion people with impaired vision. Of these, 300 million people are affected by colour blindness in various forms. And for this reason, designers should definitely think about colors and contrasts. With little effort, the accessibility of a page can be massively improved. . Colors that do not comply with an accessible standard may be a problem for following users: . People who suffer from a form of colour blindness | People with impaired vision | Not enough contrast affects all users | . . Give your site enough contrast . According to W3C guidelines, the contrast of small text size must have a contrast ratio of at least 4.5:1. From 24px and larger font sizes the text must have a contrast ratio of at least 3:1. Graphic objects and UI components should generally have a contrast ratio of 3:1. . Level AA minimum contrast Level AAA minumum contrast . small text (16px, 4.5:1) | small text (16px, 7:1) | . large text (24px – 3:1) | large text (24px – 4.5:1) | . There are countless tools for checking the contrast of elements and text, one of my favourite tools is the Colour Contrast Analyser from the paciello group. . The following example shows what effect a carefully chosen contrast has on the page: . On the left side, the User Interface (UI) does not conform to any Web Content Accessibility Guidelines (WCAG) standard, while on the right side it conforms to the WCAG AA standard. . . Do not make information dependent on their colour . To ensure that visually impaired users can see all information on a page, it is important not to make the information dependent on a colour. . In this example we see that users suffering from total color blindness cannot see the input error. . To make the error message accessible to all people, we have to add icons and explanatory text. . Now even a person who suffers from total color blindness can see the error message. . . Determine the primary and secondary colours . Colours are an important design tool when it comes to the usability of a page. We can use colours to highlight interactive elements, brand the website or highlight information. It makes sense to use a strict colour system. Generally we can separate the page into 2 colour systems. . Primary colours . Primary colours are essential colours in our design system. This includes colours like: Text colour, interaction colour, white and branding colour. These colours are exclusive and are only used for the intended purpose. They allow users with impaired vision to better navigate. . Secondary colours . Secondary colours are used to design the page, for example within illustrations or graphics. But backgrounds can also be defined in this colour category. In general, it should be noted that these differ enough from the primary colours. And that they have enough contrast. . This example shows why it makes sense to define a interaction color for clickable elements. The actual main interaction is lost if the interaction color is used too often. . . How to create a barrier-free colour scheme? . Now that we know the basic rules, it is time to apply them in practice. Not so many steps are necessary to create a barrier-free colour scheme. . Define the shades of gray . Grey tones are essential in almost every system. They are used for backgrounds or fonts. 3 different grey tones form a good basis for a colour system. . Define the font color . The font colour is usually the darkest shade of grey that we use. It must have a contrast of at least 7:1 or more. . . Define the brightest grey tone . Once the font color is selected, we define the brightest possible tone for the gray we want to use as the font. This color must not be less than the contrast value of 3:1. . . Find the middle . After the darkest and lightest color value for text, we look for an average value with a contrast ratio of 4.5:1. . . Now we have defined 3 colors in our color system which are accessible for the text. This gives us the possibility to mark a primary, secondary and tertiary text. . Define a background . Now we need a background, we have white, because we know that this color works for all 3 colors. But we need a grey background in the colour scheme. For example to separate certain sections. . . We only use tertiary text on a white background, which means we have to make sure that we get enough contrast to our background for the primary and secondary text. The contrast value of 4.5:1 is the minimum contrast. . Define the colors . With colours, the whole thing becomes a bit more complex, we can’t just change the opacity, we have to find and match certain colour values. That’s a process that can take some time, but it’s worth it. First we define the main color and make sure that there is enough contrast. It is useful to define an additional background, making sure that it has enough contrast to the black primary text and our defined color. . . Once we have defined a color, an accent color and a background, we can repeat this process for each additional color. . . But what if the customer specifies the colours? . Make it clear to your customer that in this case his specified colours cannot be transferred 1:1 to the web. Not enough contrast on the website has a negative effect on all users. . . Links . W3C – Contrast minimum W3C – Contrast enhanced W3C – Non text contrast W3C – Use of color .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules/colours/",
    "relUrl": "/docs/design-rules/colours/"
  }
  ,"9": {
    "title": "Consistency",
    "content": "Consistency . A consistent design that is used throughout the system gives the user a feeling of confidence when working with the system. But what exactly does this mean and what do I need to consider? . Consistency and standards . Aesthetic and minimalist design . . . . The problem with inconsistent use of elements | Same appearance same function | Colours Primary colours | Secondary colours | | Positionings | How can I achieve a consistent design? | . The problem with inconsistent use of elements . Elements with the same appearance should always have the same function. This is important for users who are not familiar with the system or for people with disabilities. . An inconsistent system can be a problem for the following users . People who are blind and navigate with a screen reader | User with impaired vision | Inexperienced or older users | . . Same appearance same function . If 2 elements look the same, but trigger a different action, this leads to confusion for the user. The site may become unusable for people with disabilities. . In this example titles are underlined, this can lead to confusion, because links in the copy text are also underlined. This can lead to problems despite colour differentiation. . . Colours . Colours are an important design tool when it comes to the usability of a page. We can use colours to highlight interactive elements, brand the website or highlight information. It makes sense to use a strict colour system. Generally we can separate the page into 2 colour systems. See also chapter Colours to get more detailed informations about colours. . Primary colours . Primary colours are essential colours in our design system. This includes colours like: Text colour, interaction colour, white and branding colour. These colours are exclusive and are only used for the intended purpose. They allow users with impaired vision to better navigate. . Secondary colours . Secondary colours are used to design the page, for example within illustrations or graphics. But backgrounds can also be defined in this colour category. In general, it should be noted that these differ enough from the primary colours. And that they have enough contrast. . This example shows why it makes sense to define a color for clickable elements. The actual main interaction is lost if the interaction color is used too often. . . Positionings . Certain elements have established their position on a website and should be retained. These include navigation and footer. As a general rule, it should be ensured that elements once placed are consistently placed in the same position on all other pages. This allows users with screen readers or users with disabilities to use familiar patterns. . . How can I achieve a consistent design? . A consistent design across all breakpoints and screens can only be achieved with a detailed design system. Even if You as ux-designer not work with other designers, it makes sense to create one. You can work on a solid basis during the whole design process. . . . Links . W3C – Consistent Navigation W3C – Use of Color W3C – Contrast .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules/consistency/",
    "relUrl": "/docs/design-rules/consistency/"
  }
  ,"10": {
    "title": "Content and language",
    "content": "Content and language . The right choice of words is essential when it comes to accessibility. . Match between system and the real world . Help and documentation . . . . Who needs accessible language? | What is accessible language? Understandable Content | Easy-to-read | | Which language is the right one for my site? | How can I simplify content | . Who needs accessible language? . As soon as people are confronted with a topic that is more complex than the environment they normally find themselves in, accessible language is useful. . For example: . Users who have to take care of their insurance needs. | When people use online banking. | When people have to follow technical instructions. | People who have to speak a foreign language. | . . What is accessible language? . We speak of easily accessible language whenever we need to describe a topic in a simplified way to make it more understandable to a wider audience. Therefore it is important that we enable all users to understand the content of a page. Generally we can define two categories of accessible language. . Understandable Content . To make content accessible to a wider range of users, including people with reading difficulties, it is simply a matter of avoiding technical terms. Technical terms require prior knowledge in most cases. This should never be assumed. . Easy-to-read . But sometimes it is not enough to avoid technical terms. There can be various reasons for this: . When medical information is made available to a broad public, technical terms are often avoided. Nevertheless, people with reading disabilities or other disabilities may find it difficult to understand such texts. . | People who are not fluent in a foreign language find it difficult to understand a text even if technical terms are not included. . | . In such cases it is advisable to prepare the content in simple language. Simple language translates topics aimed at a specific target group. The content is reduced and supported with illustrations or pictures. In this way, people with disabilities can understand complex issues. . On the left side we see we see an unnecessarily complex description of a process. The subdivision into steps and the support by symbols makes it easier to understand the process. . . Which language is the right one for my site? . Content should always be reproduced as simply as possible. This improves the user experience for all users. The choice of the language used on a page depends on the target audience. Although my content is aimed at experts with specialist knowledge in their field, there may be people in this target group who have difficulty understanding large and complex amounts of text. . If I define my target group specifically, technical terms can be used without problems. | As soon as my content is aimed at a wider audience, technical terms should be avoided. | As soon as my offer is clearly directed at a target group that has limitations in understanding text, simplified language should be offered as an option. | . On the portal of the Canton of St.Gallen, simple language is offered throughout the entire website. This makes sense, as the target group is very broad. . . How can I simplify content . Short paragraphs and sentences make it easier to read | Avoid technical terms | Expand acronyms. For Example, Rich Text Format (RTF) | Format and structure your text. See chapter Semantics | Use illustrations, icons and pictures to make your content easier to understand | Describe concrete examples, this makes it easier for many users to understand the content | . . Links . W3C – Understandable Content W3C – Writing for Web Accessibility .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/Architecture/content-and-language/",
    "relUrl": "/docs/Architecture/content-and-language/"
  }
  ,"11": {
    "title": "Context",
    "content": "Context . When we talk to a person face to face, content is often put into context. In this way misunderstandings can be avoided. The same is applicable to content on the web. If the context is not given, users cannot classify the meaning of individual elements. . Consistency and standards . Recognition rather than recall . Aesthetic and minimalist design . . . . Why the context on a website is important | Set titles, everywhere | Make meaningful labels | Active and inactive status | . Why the context on a website is important . Page titles are essential to enable all users to quickly identify the content of a website. On the one hand, pages must be marked with the &lt;title&gt; element, so that pages in browser tabs can be quickly identified. On the other hand it makes sense to give each page a content describing &lt;h1&gt; title (main title), so that people with visual impairments or withlimited short-term memory can put the pages into context faster. . A website without title and context can be problematic for subsequent persons: . People who are blind and navigate with a screen reader | User with impaired vision | People with limited short-term memory | . This simple example shows the meaning of titles and context. Without context, the user does not know what product it is and what the slider is for. . . Set titles, everywhere . That means for us as designers, titles are essential to improve the usability of a website. Therefore it makes sense to give each new section of a website or app a title that is appropriate to its content, in addition to the &lt;h1&gt; title. This has the following advantages. . Blind users notice the change to a new section within a page and can associate the content. | Users who navigate using the keyboard can easily skip from one section to another. | The risk of creating misunderstandings on the site through unclear sections is minimized. | . . Make meaningful labels . Not only pages and sections need titles that match the content. Also for links and buttons it is important that they show the action behind them. So all users and especially blind users can skip links that are not interesting for them. . The following examples illustrate the importance of meaningful labels: . More Start . For the user such labels are meaningless, even in the context of the content it is difficult to see what is behind the button or link. It should be avoided that the user has to read additional text to understand simple buttons and links. . Learn more about accessibility start your project now . With a content describing label it is now clear what kind of action is behind the button or link. The user can even see what is triggered by the elements without reading the content. This is useful for people who navigate through a page with a screen reader. . In addition to meaningful labels, it is also important to adapt the labels to the contents. This means that the labels should have the same wording as in the previous dialog. . This example clearly shows why labels should be put into context and labelled according to their actions. The usability improves for all users. . . Active and inactive status . It is also a matter of context if we only show certain contents of a page by interaction. The user must be able to determine the connection between trigger and appearing content at any time. Active elements should therefore always be highlighted. See also chapter Nested content to get more detailed information on this topic. . For tabs it is very important to create the context visually so that the user knows which tab is currently active. . . Links . W3C – Page Titled W3C – Section Headings W3C – Link Purpose W3C – Accordion .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/Architecture/context/",
    "relUrl": "/docs/Architecture/context/"
  }
  ,"12": {
    "title": "Decorative elements",
    "content": "Decorative elements . Decorative elements without actual use are often used to give a website an individual look. However, certain rules must be observed to ensure that a website can be designed barrier-free. . Aesthetic and minimalist design . . . . What problems can occur with decorative elements? | Decorative elements are not bad | Do not disturb the UI | Do not override other functions Screen freeze | Navigation and ARIA | | . What problems can occur with decorative elements? . Some people find it difficult to concentrate because decorative elements can interrupt their user experience. Decorative elements, if used incorrectly, can also disturb screen readers and keyboard navigation. . . Decorative elements are not bad . First of all, decorative elements are not generally bad. You can structure a website into sections or highlight and bundle certain information. . . Do not disturb the UI . If decorative elements are used, they must under no circumstances disturb the UI. The following rules must be observed. . Do not use a primary colour which is in use on the page. | Use decorative elements only rarely. | Do not make information dependent on decorative elements. | Do not distract from the actual focus. | . . Do not override other functions . Sometimes decorative elements are the heart of a website or app and should be presented accordingly. The following should not be the case: . Screen freeze . A decorative element or animation should not “freeze” the screen and draw full attention to the element. Users can lose their orientation, and users with disabilities cannot understand the process. . Navigation and ARIA . Important: When decorative elements are used, they must not affect the experience when using screen readers or navigating with the keyboard. . Adding aria-hidden=&quot;true&quot; to an element removes that element and all of its children from the accessibility tree. This can improve the experience for assistive technology users by hiding: . purely decorative content, such as icons or images | duplicated content, such as repeated text | offscreen or collapsed content, such as menus | . . Links . W3C – ARIA Developer Mozilla ARIA .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules/decorative-elements/",
    "relUrl": "/docs/design-rules/decorative-elements/"
  }
  ,"13": {
    "title": "Design rules",
    "content": "Design rules . Accessible design is not as complicated as many people think. If basic rules are followed, the design can prevent many hurdles for people with disabilities. The following chapters cover the most important rules that must be observed. .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules",
    "relUrl": "/docs/design-rules"
  }
  ,"14": {
    "title": "Home",
    "content": "Accessibility Designer Guide . In this guide I try to answer as many questions as possible about Accessibility Design based on existing guidelines W3C and my personal experience. Before you jump into the topic you should know that this guide is limited to design only and does not cover the topic of code. It does partly relate to code, but only superficially. . As a designer, it is always difficult to get accessible design explained in an understandable way. Usability is a topic that is much more on the mind. But usability and accessibility have no clear boundaries. My goal in this guide is to combine accessibility with usability. That’s why you will find descriptions in each chapter that refer to the corresponding heuristics. . . Contributing . You can work on this guide, it is not finished yet. Please send me an issue or a pull request, you can also mail me if you have added a new article or want to suggest changes. Read more about becoming a contributor in my GitHub repo. .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs",
    "relUrl": "/docs"
  }
  ,"15": {
    "title": "",
    "content": "Documentation . This documentation serves as an additional text for the submission of the Accessibility Designer Guide as the final thesis of the course of studies HF IAD 2017. . Back to the guide . . . Choice of topic | Benchmark analysis | Design decision Purple/Orange | Font | | Techology Just the docs | | Next steps Reviewing content | Patterns | Publication and collaboration | | . Choice of topic . As a UX designer I am daily confronted with the challenge of combining usability and accessibility. Finding the right balance is a big challenge. This topic is more than just a thesis for me. It is a way of working that I try to internalize, and I am only at the beginning. In the year 2020, I believe it is not acceptable for user groups to be excluded from digital solutions. That’s why I wanted to focus more on the topic of accessibility. . A major problem is the current accessibility guides, they are not designed in an appealing way. They are often difficult to understand or too much addressed to developers. Designers look for the information on medium or other blogs. I wanted to create a place that collects this knowledge in an interactive and appealing way. . . Benchmark analysis . Current guides dealing with this topic are very detailed. However, they are quite complicated for designers to read and understand. Many of the guides are out of date. It is therefore understandable that blogs fill this gap and serve as a source for designers. . . Design decision . The current design of the guide is based on a benchmark analysis for guides used for reference. Page navigation is essential, the user must know where he is and which chapters are available. Therefore only a page navigation that offers a permanent overview is suitable. . Purple/Orange . These colours were chosen because they represent a recommended colour combination for barrier-free design. . Font . The Inter as basis font is characterized by a very good readability. This font was especially designed for displays and works perfectly even in the smallest applications. . . Techology . Since this guide is very text-heavy and should allow easy editing of the content, I decided to use jekyll. This technology enabled me to capture large amounts of text in markup and compile it directly into an html page. . Just the docs . Just the docs was used as basis, because it is one of the most developed jekyll themes. It fits almost all the requirements I had for my guide. . The code is semantically correct | The navigation shows the current location | Breadcrumbs | Search | Simple creation of a menu structure | Cooperation in the future is possible | . . Next steps . Several steps are planned in the near future. It is very important that this guide is not seen as completed. The current status should only be the starting point. . Reviewing content . The content must be thoroughly reviewed again, currently the site is in a working state which is ready for submission. For a publication the guide is not developed enough. . Patterns . Patterns will be included in the guide, this will be an important part of the guide in the future. Actually this is one of the most important parts for designers, but it didn’t make sense for me to publish it if the foundation is not developed enough. . Publication and collaboration . Since I can’t do this all by myself, this guide will be completely designed for collaboration in the future. Everybody can be a part of it and this collection of knowledge will continue to grow. .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/documentation/",
    "relUrl": "/documentation/"
  }
  ,"16": {
    "title": "Expectations",
    "content": "Expectations . Depending on how an element is designed and implemented, it can raise expectations of the user. Especially for users with screen readers, it is important that a standard design pattern behaves as it is defined . Consistency and standards . . . . What is the problem when patterns change their usual behaviour? | Learned behaviour of elements | . What is the problem when patterns change their usual behaviour? . Anyone who has ever pulled a door that actually needs to be pulled knows what it feels like when something behaves differently than expected. This feeling comes up again and again with users who use screen readers or people with disabilities on websites whenever a known pattern behaves differently than the norm requires. . A wrong expectation of a pattern is a problem for the following users . People who are blind and navigate with a screen reader | User with impaired vision | Inexperienced or older users | . . Learned behaviour of elements . Certain design patterns have established themselves over the years and should not be reinvented. Users know how to interact with them, and when properly implemented, they are accessible to screen readers and keyboard operations. . A good collection of design patterns and their behaviour can be found in the material design documentation of google. . . Links . Google – material design documentation W3C – Design patterns .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules/expectations/",
    "relUrl": "/docs/design-rules/expectations/"
  }
  ,"17": {
    "title": "Icons",
    "content": "Icons . When it comes to icons, different specifications must be observed. Not all icons are self-explanatory or designed for small applications. . Consistency and standards . Aesthetic and minimalist design . . . . Signs and communication Understanding icon | Understanding index | Understandning symbol | Understanding icons in UI | | Icons in UI Icon labels | Icons contrast | Icons for small applications | | . Signs and communication . So that we can take a closer look at the topic of icons and analyze them for accessibility. First we have to understand what an icon is. This definition is actually not as simple as it seems. Charles S. Peirce, a philosopher of the late 19th century defined 3 basic signs in semiotics: the icon, the index and the symbol. . . Understanding icon . An icon resembles the object it stands for and thus establishes a connection to it. The following example illustrates this. . A classic icon from the field of user interface design is the mail icon. It shows a letter and creates the link to the physical letter and the sending of a message. . . Understanding index . An index indicates what it stands for, the classic example is smoke which stands for fire. . Photo by Jens Johnsson on Unsplash . . Understandning symbol . The symbol makes no clear connection to its origin. The meaning often has to be learned culturally, which means that prior knowledge is needed to understand symbols. A good example of this are religious symbols, which are not self-explanatory for all people at first go. . A good example of this is the Om or Aum symbol. The Om is a sacred sound and a spiritual symbol in Indian religions. It signifies the essence of the ultimate reality, consciousness or Atman Wikipedia . This knowledge cannot be expected of everyone, and therefore this symbol needs background knowledge to be understood. . Understanding icons in UI . Now that we have defined the basics, it is time to transfer them into the user interface design. Icons are elementary components of user interfaces. We can label functions using established icons or simplify contents through supporting icons. In the beginning of the user interface design we tried to design these icons as close as possible to the original. . In this picture we see the famous System 7 from Apple. Folders look like folders and the trash can looks like a trash can. Wikimedia – Apple . And now we also see that at some point we reach a limit with icons as defined by semiotics. We cannot display complex processes like a “login” or “file sharing” exactly as it is meant. That’s why in the UI we rather speak of symbols which are used as icons. . . Icons in UI . Icons in user interface design are to be considered as symbols and sometimes require prior knowledge. There are various icons that have established themselves and now stand for themselves. . Search icon | Navigation bars | User icon | Close icon | . Icon labels . If icons that are not self-explanatory are used as interaction elements, they should always have a label that explains their function. . We see here two times the same interface, once with labels and once without. It is immediately clear that the interface with label is more user-friendly. Not only for users with disabilities it’s much easier to use the interface with labels, but for all users. See also chapter Context to get more detailed informationabout meaningful labels. . Icons contrast . For UI components and graphical objects, WCAG requires a contrast ratio of at least 3:1. If icons are used as interaction elements, for example in navigation, a contrast of 4.5:1 is recommended. Since the icons in navigation must be aligned with the navigation labels. See also chapter Colours to get more detailed information about contrast. . There are countless tools for checking the contrast of elements and text, one of my favourite tools is the Colour Contrast Analyser from the paciello group. . Icons for small applications . Icons are well suited to make the interface more understandable. One challenge is to design icons for all device sizes. It is recommended to adapt the icons for each viewport to ensure that they are always recognizable for all users. This helps people with visual disabilities to find their way around. . Icons are usually formatted as follows: . 32/32px ore more | 24/24px | 16/16px | 8/8px for small sizes | . In the left example we see a search icon that works well for 16px or more. Once the icon needs to be resized, it is too detailed. A solid icon like the one on the right makes more sense. . . Links . W3C – Text Alternatives W3C – Non-text Content W3C – Contrast W3C – Images of Text .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules/icons/",
    "relUrl": "/docs/design-rules/icons/"
  }
  ,"18": {
    "title": "",
    "content": "👋 Welcome to the Accessibility Designer Guide! v1.0 . Last Update: 18.06.2020 . If you are interested in barrier-free design and you need design guidelines to support you during the process, then you have come to the right place. . To the guide Documentation .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/",
    "relUrl": "/"
  }
  ,"19": {
    "title": "Keyboard friendly",
    "content": "Keyboard friendly . We usually use the mouse or trackpad to navigate around a website. But not all users can use a website in the way we as designers often imagine. . Consistency and standards . Flexibility and efficiency of use . . . . Why it is important | Structure of the Page | Focus indicators | Skip buttons and hidden keyboard features | Do not use too many link sections | . Why it is important . Users with disabilities often use the keyboard to navigate a page. In general, a Web site should be fully accessible using the keyboard. In most cases, it is the job of developers or designers with code knowledge to ensure this. However, some considerations can be made in the design phase without code to improve keyboard accessibility and help developers optimize content for keyboard use. . For the following people, a Web site that is not accessible using the keyboard can be a problem: . People who are blind and navigate with a screen reader | Users who are dependent on keyboard navigation | People with temporary impairments, for example injured hands | Old people who navigate using the keyboard | . . Structure of the Page . As we have discussed in the chapter semantics, the semantic of a website, means structuring the elements on a site into clear groups based on their meaning. This can greatly improve the ease of use of the keyboard. . In this example clear structures can be seen on the page. If modules are designed within this structure, implementation in the code is easier later. . A clear separation of the page into its semantic components makes it easier for the user to navigate with the keyboard. The user can jump from section to section and from element to element. As a designer, it makes sense to design in individual semantic elements from the very beginning, so that clear groups of elements are later developed on the page. . . Focus indicators . The focus indicator of a website is a useful tool to improve the usability of the website using the keyboard. But let’s be honest, the default focus indicators in the browser are not that great. One of the most common problems is that they do not fit into the design. Instead of removing the indicators now, they should be actively designed and planned from the beginning. After all, there are ways of designing them that are unfortunately often forgotten by designers. . Default focus indicator in Chrome. . When it comes to designing focus indicators, the following should be considered: . The size and shape of the indicator should stand out from the current element | The focus indicator should stand out from the hover and active status of the items | The indicator should have enough contrast | The colour of the indicator should fit into the design, but stand out clearly enough. | Make sure that the indicator looks the same on all browsers | Be sure that the indicator can be applied to all elements | . On the myswitzerland website, the focus is elegantly integrated into the design. An outline and a drop shadow serve as indicators here. This creates the impression that the focus surrounds an invisible button. . . Skip buttons and hidden keyboard features . A very important feature when operating websites through the keyboard are hidden keyboard features. These are navigation points which can only be reached by using the keyboard, for example we can have a closer look at the google search. After a search, we can enter the separate keyboard menu by using the tab key. This way keyboard users can skip links in the header and immediately go to the main content, this is a so-called skip button. . In this example of Google search we see a button to skip after the result appears when we use keyboard navigation. . Good to know . This means that we have to plan additional space in the navigation to fit a keyboard navigation. . . Do not use too many link sections . People with visual or physical disabilities navigate through a website using a screen reader or keyboard, and if teasers and links are repeatedly inserted into relevant content, the user experience can be severely impaired. This is because users with screenreaders or keyboard navigation can later ignore irrelevant content as users can without impairment. It is better to insert such sections at the bottom of a page so that users with screen readers can also ignore them. . A good example of this are pages on which articles are read. As a user of a screen reader, I do not want to be taken out of context by the article because related articles are suggested to me. Therefore, it makes sense for all users to place them at the end of the article. medium . . Links . W3C – Keyboard Accessible W3C – Focus Visible W3C – Bypass Blocks .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/Architecture/keyboard-friendly/",
    "relUrl": "/docs/Architecture/keyboard-friendly/"
  }
  ,"20": {
    "title": "Navigation",
    "content": "Navigation . The navigation is the heart of many websites and apps. If mistakes are made there, the user experience is significantly affected. But this does not have to be the case. . Consistency and standards . User control and freedom . Aesthetic and minimalist design . . . . Why it is important | Show me the easiest way! Show me the site architecture | Where am I | Where do I come from | Where do I want to go | | Breadcrumbs | Consistency | Footer navigation Benefits of footer navigation | | . Why it is important . If certain rules in a navigation are not followed, users can lose their orientation within the page. Content may be overlooked or not found, and there may also be a feeling that your target group is not being addressed. . An inconsistent and not well thought out navigation can be a problem for the following users: . People with a visual impairment | People who are blind and navigate with a screen reader | People who navigate through the site with the keyboard | . In order to make it as easy as possible for these user groups to navigate within the site, it makes sense to observe the following rules. . . Show me the easiest way! . The navigations are basically only intended to help the user to find his way around the website. Therefore, as a designer, you should not reinvent the pattern in terms of navigation. Given standards help to create a solid navigation, and if the designer is aware of the rules, visually appealing results can be achieved within this framework. . Show me the site architecture . Not only the site architecture should follow a hierarchy as we learned in chapter Website architecture, also the navigation should do so. The navigation should display the page architecture in a simplified form. This helps the user to get an overview of the content. . The site architecture should be displayed in the navigation, as shown in this example. . Where am I . Show the user in the navigation where he is on the page. By marking the active menu items, the orientation on the page is noticeably improved for users. . In this example the active menu item is marked. . Where do I come from . But not only the active page should be highlighted, also higher-level pages in the navigation should be highlighted. In this way, the user is always aware of where he or she has come from and where he or she is currently located. . In this example the active menu items are marked. This is applied consistently on all levels within the navigation. The user has a clear overview of where he is. . Where do I want to go . Highlight navigation points that are in the focus of the user. This helps users navigate through the page to find their way around. . In this example from Google Material Design we see how the hover state is clearly indicated in the navigation. . Often designers forget that the focus can also be designed. This is important for people who navigate the website with the keyboard. For better orientation of the user, the focus status differs in the visuality from the active menu items and hover. See Keyboard friendly. . On sbb.ch the focus state has been specially marked with a shadow, which clearly distinguishes it from the active menu items (Business customers) and the hover status. . . Breadcrumbs . In addition to navigation, breadcrumbs are excellent for showing the way of a user. Many designers tend to remove breadcrumbs for aesthetic reasons. I have a clear opinion on this and think this is a mistake. For complex websites with several navigation levels, they can make navigation a lot easier. . On sbb.ch the breadcrumbs were extended with a kind of menu function. This makes the breadcrumbs especially useful for quickly switching between the subpages of a topic using the keyboard. . . Consistency . UI components with the same function should always have the same appearance. Therefore, the navigation within the entire page should have the same visual appearance and language. It can happen that a page has visually different sections, but the navigation should not be affected by this. . . Footer navigation . Footer navigation is suitable for making pages accessible in various ways. The footer navigation should give the user an overview of the most important menu items. Useful links such as “Contact” and “Language selection” are quickly accessible. . Benefits of footer navigation . Not only important tasks can be reached via Footer naviation. The footer navigation also creates the visual end of a page. The repetition pattern at the end of a page gives users with disabilities an additional indication. . Apple lists the navigation again in the footer and also includes general settings and contact links there. Apple . . Links . W3C – Bypass Blocks W3C – Page Titled W3C – Section Headings W3C – Link Purpose W3C – Multiple Ways W3C – Focus Visible W3C – Location .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/Architecture/navigation/",
    "relUrl": "/docs/Architecture/navigation/"
  }
  ,"21": {
    "title": "Nested content",
    "content": "Nested content . Additional content is used when the user should not be confronted with the entire content immediately. On the one hand the user is not overwhelmed, on the other hand hiding content can cause problems. . Consistency and standards . Aesthetic and minimalist design . . . . Why it is problematic to nest information | How to nest content correctly Announce the content to be expected | Do not nest important functions | Display what is active | | . Why it is problematic to nest information . If content is nested by using tabs or accordions, the page appears more organized and structured. However, the complexity of the page and how to use it increases. . The following problems may occur: . Users overlook content | If unsuitable contents are nested, the usability for all users is reduced | The demands on cross-device design are increasing | For all users and special users with disabilities, the site becomes more complicated to use with screen reader and keyboard navigation | . . How to nest content correctly . In general, nested information is not bad, correctly implemented it can improve the usability of a page. An important part is the implementation of the elements in the code. For example the semantically correct implication: see chapter Semantics. But also in the design there are certain rules that have to be observed. . Announce the content to be expected . If content is nested, it is important to provide it with a label that describes the content. This way the user knows exactly what to expect. See also chapter Context for more informations about meaningful labels. . On the page of ebookers the labels are very clearly described and are supported by an icon. For the user it is immediately clear what to expect behind this tab. . Do not nest important functions . If content is nested, it should not be an essential part of the operation of the site. The operability of the site must not suffer. Otherwise it can be confusing for the users, because they cannot find important functions. . In this example the important buton within the tabs is overlooked. The interaction with the individual products is made more difficult by the unnecessary nesting. It is better to show the offers. . Display what is active . If information is nested, it is important to show the user which elements are currently active. Often a colourful highlighting is sufficient, optimnally this is supported by backgrounds. This allows the user to set the content in context more easily. See also chapter Context. . the following example shows the problem . In the first example it can be difficult for some users to see the active state of the tabs. In the second example, where the background is used to connect to the content, it is clear which tab is active. . . Links . W3C – Accordion W3C – Example Disclosure (Show/Hide) .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/Architecture/nested-content/",
    "relUrl": "/docs/Architecture/nested-content/"
  }
  ,"22": {
    "title": "Processes",
    "content": "Processes . When the user is in a process on the website, he follows instructions. He trusts that the steps he follows will lead him to the goal. Therefore, it is very important for us as designers to make this process as easy as possible for all user groups. . Visibility of system status . User control and freedom . Aesthetic and minimalist design . Help users recognize, diagnose, and recover from errors . . . . What is the problem with processes | Guide the user Show only what is important right now | Show how easy it is | | Give the user control Give the user confirmation | Edit selection afterwards | The process can be stopped at any time | | Give feedback | . What is the problem with processes . If the user enters a process on a website or in an app, he trusts the system. There should never be a feeling that control has been relinquished or that errors may have consequences. . A process can pose problems for certain user groups: . Inexperienced or older users feel insecure. | People with screen readers find it hard to find their way around if processes are not implemented correctly. | People with physical impairments feel insecure if they accidentally click something wrong in a process. | . . Guide the user . The easiest way to make a process barrier-free is to guide the user. By guiding a process, especially disabled or inexperienced users feel more secure in their actions. But what are the possibilities to design a guided process? . Show only what is important right now . We should only show what we ask of the user. Therefore we design the process so that the focus is on this one current step. . the following example shows the problem . In this example, all steps are listed below each other. Although it is pointed out that the previous step still needs to be filled in, such a process is not clear to all users. . Show how easy it is . To give the user even more confidence, the past, current and upcoming steps can be listed in a reduced form. This makes it clear to the user where he is at the moment. . In this example we only show what is necessary and give the user the possibility to jump to the previous step if desired. For the user this screen is more clearly arranged. . . Give the user control . People with disabilities, older users or people with visual impairments can quickly make false or unwanted interactions. Therefore, we should always give users the opportunity to correct their mistakes. . Give the user confirmation . For a user to feel confirmed, it makes sense to show a summary of the steps to be performed. A classic example of this is a shopping cart that is listed again, or a list of all pictures that are sent. . Edit selection afterwards . If we show the user a summary, this is ideally also editable. This allows users to correct any mistakes. . In this process the individual items can be edited or removed again. . The process can be stopped at any time . Errors happen, and people with disabilities can quickly trigger unwanted actions. It is therefore recommended that processes can be stopped at any time. The system must be as tolerant of errors as possible. . . Give feedback . For all users it is confusing when the system completes an interaction or process without feedback. On the one hand you get the feeling that something has not worked. On the other hand, the user is not sure if the process took place at all. For users with disabilities who quickly make mistakes when using websites this is a accessibility problem. See also chapter Application feedback to get more detailed information about user feedback. . In this example, the upload can be stopped at any time and the user can see exactly what is happening and how the process is progressing. . . Links . Nielsen Norman Group – Visibility of System Status .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/Architecture/processes/",
    "relUrl": "/docs/Architecture/processes/"
  }
  ,"23": {
    "title": "Semantics",
    "content": "Semantics . The structure and dependency of the content on a website gives a product the finishing touch in accessibility. . Match between system and the real world . Aesthetic and minimalist design . . . . What is meant by semantics? Semantic in text | Semantic in Code | | Semantic in Code (HTML5)– Cheatsheet | Why semantics in design helps developers Structure of the page | Correct use of the elements | | . What is meant by semantics? . Semantics is called the theory of the meaning of signs. As designers, we can give meaning to text and other elements through their appearance or positioning. In general, the appearance should support the content and not force a meaning. The following examples illustrate this. . Semantic in text . Everyone of us comes into contact with semantics in text. In typography, text has always been structured by semantic design and optimized for the reader. As an example we can look at a text without any markup. We see in this case a simple block, without any differentiation in itself. . Quis eleifend quam adipiscing vitae. Cras sed felis eget velit. Magna ac placerat vestibulum lectus mauris ultrices eros in cursus. Montes nascetur ridiculus mus mauris vitae ultricies. Ac turpis egestas sed tempus urna et. Pellentesque sit amet porttitor eget dolor morbi non. Ipsum faucibus vitae aliquet nec. . Just by adding a break we can give meaning to the content. Now we see the title and basic font within the text block. . Quis eleifend quam adipiscing vitae. Cras sed felis eget velit. Magna ac placerat vestibulum lectus mauris ultrices eros in cursus. Montes nascetur ridiculus mus mauris vitae ultricies. Ac turpis egestas sed tempus urna et. Pellentesque sit amet porttitor eget dolor morbi non. Ipsum faucibus vitae aliquet nec. . By adding different sizes and markings in the weight of the font, we can enhance this effect. Now the text is semantically structured. The appearance of the title also gives it the meaning of a title. The same applies to the basic text, which is recognized as basic text by its appearance. . Quis eleifend quam adipiscing vitae. Cras sed felis eget velit. Magna ac placerat vestibulum lectus mauris ultrices eros in cursus. Montes nascetur ridiculus mus mauris vitae ultricies. Ac turpis egestas sed tempus urna et. Pellentesque sit amet porttitor eget dolor morbi non. Ipsum faucibus vitae aliquet nec. . Semantic in Code . In the code, the semantics are not as clearly visible to the user as we know it from print and typography. In code, semantics includes all elements on a website. Although text on the web is also semantically prepared, there are many more elements that need to be marked up, text alone is not enough. It is important to correctly label the elements. This has the following reasons: . Semantic code can be better read by programs. | Loading times are shortened. | Automatic tables of contents can be created. | The keyboard operation is easier. See Keyboard friendly. | Accessibility is made possible because screen readers can read the content. | . Basically, each element on the page is given a meaning in the code that corresponds to the content or function of the element. This has several advantages, especially in terms of accessibility. The semantics in the code allows screen readers to read the meaning of individual elements, allowing people with impaired vision to navigate the page. . . Semantic in Code (HTML5)– Cheatsheet . HTML 5 Meaning . &lt;h1 – h6&gt; | Titles in text. | . &lt;header&gt; | Header section oft the page. | . &lt;nav&gt; | With this you can mark a section of a page, which contains links for navigation. | . &lt;footer&gt; | Footer section oft the page. | . &lt;article&gt; | Self-contained composition in one document. | . &lt;aside&gt; | Content that indirectly belongs to the rest of the content, for example a dictionary of terms. | . &lt;details&gt; | Is used to mark up additional information, for example in a dropwdown, is often used in combination with the &lt;summary&gt; element. | . &lt;summary&gt; | Is often used to mark additional information, for example in combination with the &lt;details&gt; element. | . &lt;figure&gt; | An element that often explains itself graphically. For example a picture. The corresponding descriptive element is the &lt;figcaption&gt; element. | . &lt;figcaption&gt; | Describes the content of the related &lt;figure&gt; element. | . &lt;main&gt; | This can be used to mark the primary content of a page. for a blog post this would be the main text. | . &lt;mark&gt; | This can be used to identify highlighted text. | . &lt;time&gt; | This can be used to mark times or specific dates in the text. | . . Why semantics in design helps developers . If you are a designer without any code knowledge and now think that this is the job of the developers, you are right, but also not. Correct is, it is the task of the developers to implement the code semantically correct. However, if semantic code principles are followed in the design, the implementation is much easier later in the code. The following principles should be followed: . Structure of the page . Make sure that your design can be categorized into the common areas. Clear areas on your site simplify the structure for developers. . In this example clear structures can be seen on the page. If modules are designed within this structure, implementation in the code is easier later. . Correct use of the elements . Use elements correctly and do not complicate your design unnecessarily. An example is overloaded overlays or multi-level nesting in dropdowns. . . Links . developer.mozilla – semantics w3schools – HTML Semantic Elements W3C – Using semantic elements to mark up structure .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/Architecture/semantics/",
    "relUrl": "/docs/Architecture/semantics/"
  }
  ,"24": {
    "title": "Support through the system",
    "content": "Support through the system . People with disabilities tend to trigger false actions more often than users without disabilities. It is therefore helpful to plan the system in such a way that mistakes can be avoided in the initial phase. . Error prevention . Help users recognize, diagnose, and recover from errors . . . . What is the problem if the system does not provide support? | Error avoidance through restrictions | Error avoidance through support | Error avoidance through repetition | Not all options are always available | . What is the problem if the system does not provide support? . When users are disabled, they can often inadvertently trigger wrong actions. If this is the case, this should not be a problem for the user. The system should support the user and prevent errors from the beginning. . A system without support can be a problem for the following users: . Inexperienced or older users feel insecure | People with physical impairments feel insecure if they accidentally click something wrong | . . Error avoidance through restrictions . One possible way to avoid errors is to limit the user’s options. By limiting the input possibilities, the error rate of a system is reduced. For users with limitations, it is more clear what is required of them. . In this example ottonova with a date, the format of the input is already predefined and only the input of numbers is allowed. . . Error avoidance through support . Errors can occur when entering information, not only for disabled users. This should not be a problem for the user. As a good example the live search should be considered. Suggestions are often made during the input. These suggestions also correct input errors. This avoids empty search results. . The automatic live search completion reduces the chance of errors during input. google . . Error avoidance through repetition . Repeated requests for information force the user to check the information entered. In addition, by comparing the information, the system can detect errors and warn the user. A good example of this is setting a password. The user is forced to repeat this in order to avoid making errors. For actions with consequences, such as deleting a file, the system should always ask the user first whether this action is actually desired. . The system asks the user if they really want to delete the file. . . Not all options are always available . Certain actions are dependent on other factors. For example, as a private user I need different input fields like an organization. Therefore, it makes sense not to display them for both users. It is better to separate both input variants. For example, with a radio button. This way, the user is not overwhelmed with too much information. Another example are inactive elements that only become active once everything has been entered. In this way, the user knows that he or she can now proceed to the next step. See processes for more information on processes and user guidance. . The system determines when it is possible to switch to the next step. . . Links . W3C – Input Assistance W3C – Error Identification W3C – Error Prevention .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/Architecture/support-through-the-system/",
    "relUrl": "/docs/Architecture/support-through-the-system/"
  }
  ,"25": {
    "title": "Targetsize",
    "content": "Targetsize . The target size of buttons, links and other clickable elements is an important factor when it comes to accessibility. But what needs to be considered? . Consistency and standards . . . . What is the problem with the target size? | Give clickable elements enough space | Basic rule | Mobile and Desktop | . What is the problem with the target size? . Some people find it difficult to activate small buttons because of their age or disability. As designers, we have to follow standards so that people have the opportunity to use them on all devices. . A small target size could be a problem for the following users: . People with a hand tumor or injured hands. | People with visual impairment. | Users who only have one hand available to operate a device. | . . Give clickable elements enough space . In order for systems to be able to operate with disabilities, it is important to create enough space for clickable elements. This means that, in addition to a comfortable target size, the corresponding margin, i.e. the space around it, must also be included. . For example an icon can be placed at 24px × 24px, with the space around the icon we still get a target size of at least 48px. . . Basic rule . According to the W3C – Target size the target size of interaction elements must be at least 44px to 44px. Personally, I believe that this size is still rather at the minimum. Android recommend a target size of 48px to 48px, which is a more convenient target size. . Device Targetsize . Mobile | 48px × 48px | . Desktop | 48px × 48px | . Excepted from this rule are text links in the content, since these are part of the content itself. . . Mobile and Desktop . The differences between desktop and mobile are minimal, the target size does not change. Only the margin can be a slightly tighter on the desktop, since Mobile, in difference to the desktop, is navigated by touch. However, the elements should be left enough room for interaction here as well. . . Links . W3C – Target size Android – Multi-device responsive design .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules/targetsize/",
    "relUrl": "/docs/design-rules/targetsize/"
  }
  ,"26": {
    "title": "Typography",
    "content": "Typography . For centuries, typefaces have been refined by type designers, typographers, and designers. Many specifications that work for print can also be transferred to the web and can improve the usability and accessibility of a page. . . . . For which users can incorrect typography be a problem? | Print also works digitally | Fonts sizes For print | For web | | Line height | Text width | Colors | Levels of the titles Visual semantic structuring | Technical semantic structuring | | Do not use text as image | . For which users can incorrect typography be a problem? . If the font sizes are too small, the character spacing is too large and the semantics are ignored, this affects the user. . Users with limited vision cannot read the content | Users who have problems reading find it difficult to find their way | Users with concentration problems are more quickly distracted by their surroundings due to the challenging typography | . . Print also works digitally . For centuries, typefaces have been refined by type designers, typographers and designers. Many specifications that work for print can also be transferred to the web and can increase the usability of a page. . Fonts sizes . From classical typography we know a clear classification of font sizes, 3 categories have been established: . For print . Use of the font Size oft the font . The consultation size (annotations, margin notes, captions, lexicon entries) | 6 – 8 points | . The reading size (larger texts) | 9 – 12 points | . The sight size (titels | 14 – 28 points | . This rule has proven itself and helps to structure texts in print in a way that is pleasing to the eye. Of course, this rule can also be broken, but to break a rule, one must first know it. . I always have this rule in mind when I have to develop font sizes for digital products. They are well suited to create a harmonious typeface on the web, but point values cannot simply be adopted 1:1 for pixel values. The following rule serves as a good basis for a typographic system: . For web . Use of the font Size oft the font . The consultation size | 13 – 14px | . The reading size | 16 – 20px | . The sight size | 24px and more | . In general, fonts on the Web should not be smaller than 13px, but if this should happen, it is mostly decorative elements that do not serve the UI or there must be a really good reason to fall below this value. . . Line height . A carefully chosen line height helps all users to understand texts faster. The eye can jump from one line to the next faster. The line height varies from font to font and depends on the line length and the visual appearance of the font. However, there are certain basic rules that can help to define a line height that is comfortable for the eye. . As a rule, the line height should be 120% of the font size, which means at least 12px line height for a 10px font. | The line height should always be clearly larger than the word spacing. | . A carefully chosen line height makes it easier for all users to read the text. On the left side the line height is too small, on the right side the line height is chosen correctly. . . Text width . The web is often very generously designed and the complete viewport width is often used. However, a certain part of a website should have clear limitations, and this includes copy text. If the width is too large and the number of characters per line is too high, the eye loses its orientation. This makes it difficult to read texts, not only for people with disabilities. The following example shows this clearly: . On wikipedia the line width is much too wide. It is often very uncomfortable for the reader to read this text. . In print, the rule is 60 – 80 characters per line. I personally like to have a value of 500 – 700 pixels for the text in width on a website. This is quite close to the rule for printing. The font size and font type also affects this value. In the end it is a combination of all values that leads to a harmonious and pleasantly readable typeface. . If the line width would be reduced to max. 600px as in this example, the readability would be massively improved. . Device Width . Desktop | 500 – 700px or 60 - 80 characters per line | . Tablet | 500 – 700px or 60 – 80 characters per line | . Mobile | full width | . . Colors . According to the W3C guidelines, the contrast of text of normal size (approx. 13px - 17px) must have a contrast ratio of at least 4.5:1. From 18px and larger font sizes, the text must have a contrast ratio of at least 3:1. . Font size Contrast . 13 – 17px | 4.5:1 | . 18px + | 3:1 | . There are countless tools for checking the contrast of elements and text, one of my favourite tools is the Colour Contrast Analyser from the paciello group. . Check Colours to learn more about colours and contrast. . . Levels of the titles . To give a page structure, it is important to have typographic levels. We distinguish two types of structuring. The visual structure and the technical structure. . Visual semantic structuring . In typography, text has always been structured by semantic design and optimized for the reader. As an example we can look at a text without any markup. We see in this case a simple block, without any differentiation in itself. . Quis eleifend quam adipiscing vitae. Cras sed felis eget velit. Magna ac placerat vestibulum lectus mauris ultrices eros in cursus. Montes nascetur ridiculus mus mauris vitae ultricies. Ac turpis egestas sed tempus urna et. Pellentesque sit amet porttitor eget dolor morbi non. Ipsum faucibus vitae aliquet nec. . By adding different sizes and markings in the weight of the font now the text is semantically structured. The appearance of the title also gives it the meaning of a title. The same applies to the basic text, which is recognized as basic text by its appearance. . Quis eleifend quam adipiscing vitae. Cras sed felis eget velit. Magna ac placerat vestibulum lectus mauris ultrices eros in cursus. Montes nascetur ridiculus mus mauris vitae ultricies. Ac turpis egestas sed tempus urna et. Pellentesque sit amet porttitor eget dolor morbi non. Ipsum faucibus vitae aliquet nec. . To ensure that there is enough visual structure on a page, the typography must have gradations that are recognizable to the eye. . h1 Lorem ipsum . h2 Lorem ipsum . h3 Lorem ipsum . h4 Lorem ipsum . h5 Lorem ipsum . h6 Lorem ipsum . p Lorem ipsum . In this guide 6 gradations have been defined, which have a clear visual gradation for the eye and thus structure the page. It is important that there is a visual gradation, otherwise the page will be difficult for all users to understand. . Technical semantic structuring . Apart from the visual distinction, there is also a technical distinction. It is important that there is a descriptive h1 title at the top of the page. A h1 title should only appear once on a page and should never be used more than once. This is important for the ranking of the website and SEO, but also for people with disabilities who depend on a screen reader. Technically there should be a gradation from h2-h6. The screenreader doesn’t care if the gradation is visually correct, but we as designers do. In the best case the gradation is technically and visually the same. . In this example we see how we label the main content with the h1 and then the usual gradations down to h6. While the other content starts with an h2-h6, since it is lower-level. . Check semantics and context to learn more about sematnics and how to structure a page. . . Do not use text as image . Text that contributes to the content on the page and must be read should not be placed in images. A mortal sin in terms of accessibility. Screen readers have no chance of reading this text unless it is added with Alt text. However, I recommend not to do this. . . Links . Toptal – Web typography W3C – Page Titled W3C – Section Headings .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/design-rules/typography/",
    "relUrl": "/docs/design-rules/typography/"
  }
  ,"27": {
    "title": "Website architecture",
    "content": "Website architecture . Simple, short and logical paths within the website increase the usability not only for people with disabilities but for all users. But what do you need to consider when creating a website architecture? . Consistency and standards . . . . What problems can be caused by the website architecture? | Hierarchy | Category landing pages - multiple ways | . What problems can be caused by the website architecture? . Digital systems should guide the user to his destination as quickly and easily as possible. This requires a well thought-out and consistent website architecture. People with disabilities must be able to rely on the sites meeting certain standards. . An inconsistent and not well thought out architecture can be a problem for the following users: . People with a visual impairment | People who are blind and navigate with a screen reader | People who navigate through the site with the keyboard | . In order to make it as easy as possible for these user groups to navigate within the site, it makes sense to observe the following rules when structuring the pages. . . Hierarchy . The hierarchy of a website determines how we consume the content of a page. For people who rely on screen readers or use the keyboard to navigate through a website, it is important that the hierarchy follows a logical sequence. . In this example we see a clear hierarchical structure of the pages which is also structured by 4 category landing pages (on level 2). . A common mistake that is made is the inconsistent use of categories defined in a site architecture. In our example we see 4 main categories on level 2, each new content must be under one of these categories. Standalone pages make the site confusing for all users. . If main categories have been defined, it is required to comply with them. . . Category landing pages - multiple ways . A content-relevant page should be accessible via several ways within a page architecture. For example, in addition to navigation, a page can also be accessible via a teaser. Ideally, there should be several content hubs or category landing pages within a page architecture, which only serve to guide the user to his or her destination. These content hubs or category landing pages can be seen as an extension of the navigation and therefore do not disturb users of screen readers. This can help people with cognitive and visual impairments to find content faster. . In this example we can reach the target page (on level 3) either via the navigation (on any level 1, 2 or 3) or the content hub/category landing pages (on level 2). . Good to know . Pages that only serve to redirect the user to other pages should not contain relevant content. Since they do not have to be visited to navigate the site. Additionally, link-heavy sections in a content-relevant page disturb the user experience with screen readers. . . Links . W3C - Multiple Ways Nielsen Norman Group – Top 10 Information Architecture (IA) Mistakes .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/Architecture/website-architecture/",
    "relUrl": "/docs/Architecture/website-architecture/"
  }
  ,"28": {
    "title": "What does barrier-free design mean",
    "content": "What does barrier-free design mean . In recent years, barrier-free design has become more and more a topic when it comes to the conception, design and implementation of digital solutions. But what exactly is meant by this? . . . . Understanding accessibility Users with disabilities | | Assistive technology | . Understanding accessibility . Google Material Design defines accessible design as follows. “Accessibility in design enables users with different skills to navigate, understand and use your interface.” I think that sums up the area of accessible design quite well. It’s about not excluding people from digital solutions. . Users with disabilities . When people think of barrier-free design, many think of people with disabilities first. But it is not always only people with disabilities who depend on barrier-free design. Designing Interactive Systems’ author, David Benyon, offers five reasons an inaccessible product excludes users: . Physical – takes too much strength to use. | Conceptual – has hard-to-understand instructions. | Economic – is too expensive. | Cultural – users can’t understand metaphors regarding product interaction. | Social – on joining a group, users don’t understand that group’s social conventions. | . Source: Designing Interactive Systems . . Assistive technology . People with disabilities need assistive technologies to consume content on websites or in apps. Screen readers or keyboard navigation are certainly the most common means to do this. . Screenreader . Screenreader is a program that enables users with visual impairments to read content on a website. This can be done using a Braille display or by reading the content aloud. Screenreaders not only visualize and describe the visible content of a page, but also describe hidden content and elements. Descriptions for images and icons can be seen as examples. Content can be labelled to improve the screen reader experience. See chapter ARIA and Semantics to learn more about this topic. . Dot Mini is a smart device that can access any digital text content from websites, books, magazines, audio and even films on its own and transfer them into Braille. dotincorp . Keyboard . Some people find it easier to operate a system using a keyboard. This may be the case if the hands are injured or if there are other physical limitations. Navigation using the keyboard allows you to jump from anchor to anchor and from section to section. However, there is much more to a pleasantly usable page than just jumping from one section to another using the keyboard. Hidden keyboard menus and links for skipping sections help to make using the keyboard more comfortable. See chapter Keyboard friendly to learn more about this topic. . . Links . Google Material Design .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/accessibility-in-general/what-does-barrier-free%20design-mean/",
    "relUrl": "/docs/accessibility-in-general/what-does-barrier-free%20design-mean/"
  }
  ,"29": {
    "title": "Why it is important",
    "content": "Why it is important . Accessibility has become increasingly important in recent years. Due to the increasing digitalization in all areas, more and more people are using digital solutions. Nevertheless, the “Internet for all” approach is still not lived out enough. . . . . It affects us all | There are people with disabilities in every target group | The user experience is improved for all users | Accessible design does not have to be boring | . It affects us all . For me as a UX designer, accessibility is an extremely important issue. On the one hand, the developers and the code can greatly improve a product in terms of accessibility. On the other hand, there is the design part, which also has a huge impact on accessibility. As designers we have the power to make the Internet accessible to everyone. . According to the WHO, over 1 billion people worldwide suffer from some form of disability. Not all of them can use digital solutions, but for those who can, we should make it as easy as it is for us. . . There are people with disabilities in every target group . . The question often arises as to whether people with disabilities even belong to our target group. This question can be answered with yes. People with disabilities make up a large percentage of the population. Excluding these people from your services is questionable, not only from a business point of view. It is also a questionable decision from a human perspective and does not contribute to a good company image. . . The user experience is improved for all users . When a website or app is designed and developed with the “accessible for all” mindset, the experience is enhanced not only for people with disabilities. It is not a question of enabling people with disabilities to use digital systems, but of not excluding them. . . Accessible design does not have to be boring . A prejudice that is heard again and again is that barrier-free design is boring and restricts creativity. I am always surprised by this attitude. Is UX design really just “fancy digital product design”? For me, it is more the recognition of problems and their solution. This does not mean that the solution cannot be aesthetically pleasing. But there is more to a well-balanced digital product than just making it beautiful. Behind it there is a strategy for the architecture, for the content, for the code and for the design. . As a designer, if I know the rules of accessible design, I know how to push the limits. Within these rules, beautiful results can be achieved that improve usability for all user groups. .",
    "url": "http://localhost:4000/Accessibility-Designer-Guide/docs/accessibility-in-general/why-it-is-important/",
    "relUrl": "/docs/accessibility-in-general/why-it-is-important/"
  }
  
}