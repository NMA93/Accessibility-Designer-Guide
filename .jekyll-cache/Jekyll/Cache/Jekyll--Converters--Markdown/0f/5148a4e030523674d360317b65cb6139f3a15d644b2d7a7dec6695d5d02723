I"„<h1 class="no_toc fs-9" id="semantics">Semantics</h1>

<p class="fs-6 fw-300">The structure and dependency of the content on a website gives a product the finishing touch in accessibility.</p>

<hr />

<h2 class="no_toc text-delta" id="table-of-contents">Table of contents</h2>

<ol id="markdown-toc">
  <li><a href="#what-is-meant-by-semantics" id="markdown-toc-what-is-meant-by-semantics">What is meant by semantics?</a>    <ol>
      <li><a href="#semantic-in-text" id="markdown-toc-semantic-in-text">Semantic in text</a></li>
      <li><a href="#semantic-in-code" id="markdown-toc-semantic-in-code">Semantic in Code</a></li>
    </ol>
  </li>
  <li><a href="#semantic-in-code-html5-cheatsheet" id="markdown-toc-semantic-in-code-html5-cheatsheet">Semantic in Code (HTML5)â€“ Cheatsheet</a></li>
  <li><a href="#why-semantics-in-design-helps-developers" id="markdown-toc-why-semantics-in-design-helps-developers">Why semantics in design helps developers</a>    <ol>
      <li><a href="#structure-of-the-page" id="markdown-toc-structure-of-the-page">Structure of the page</a></li>
      <li><a href="#correct-use-of-the-elements" id="markdown-toc-correct-use-of-the-elements">Correct use of the elements</a></li>
    </ol>
  </li>
</ol>

<hr />

<h2 id="what-is-meant-by-semantics">What is meant by semantics?</h2>

<p>Semantics is called the theory of the meaning of signs. As designers, we can give <strong>meaning to text and other elements through their appearance or positioning</strong>. In general, the appearance should support the content and not force a meaning. The following examples illustrate this.</p>

<h3 id="semantic-in-text">Semantic in text</h3>

<p>Everyone of us comes into contact with semantics in text. In typography, text has always been structured by semantic design and optimized for the reader.  As an example we can look at a text without any markup. We see in this case a simple block, without any differentiation in itself.</p>

<p><img src="//placehold.it/800x400" alt="" /></p>

<p>Just by adding spaces and breaks we can give meaning to the content. Now we see the title and basic font within the text block.</p>

<p><img src="//placehold.it/800x400" alt="" /></p>

<p>By adding different sizes and markings in the weight of the font, we can enhance this effect. Now the text is semantically structured. The appearance of the title also gives it the meaning of a title. The same applies to the basic text, which is recognized as basic text by its appearance.</p>

<p><img src="//placehold.it/800x400" alt="" /></p>

<h3 id="semantic-in-code">Semantic in Code</h3>

<p>In the code, the semantics are not as clearly visible to the user as we know it from print and typography. Although text on the web is also semantically prepared, <strong>there are many more elements that need to be marked up</strong>, text alone is not enough. <strong>In code, semantics includes all elements on a website</strong>. It is important to correctly label the elements. This has the following reasons:</p>

<ul>
  <li>Semantic code can be better read by programs.</li>
  <li>Loading times are shortened.</li>
  <li>Automatic tables of contents can be created.</li>
  <li>The keyboard operation is easier. See <a href="/Accessibility-Designer-Guide/02-Architecture/04-keyboard%20friendly/"> Keyboard friendly.</a></li>
  <li>Accessibility is made possible because screen readers can read the content.</li>
</ul>

<p>Basically, each element on the page <strong>is given a meaning in the code that corresponds to the content or function of the element</strong>. This has several advantages, especially in terms of accessibility. The semantics in the code allows screen readers to read the meaning of individual elements, allowing people with impaired vision to navigate the page.</p>

<hr />

<h2 id="semantic-in-code-html5-cheatsheet">Semantic in Code (HTML5)â€“ Cheatsheet</h2>

<table>
  <thead>
    <tr>
      <th>HTML 5</th>
      <th style="text-align: center">Meaning</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="highlighter-rouge">&lt;h1 â€“ h6&gt;</code></td>
      <td style="text-align: center">Titles in text.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">&lt;header&gt;</code></td>
      <td style="text-align: center">Header section oft the page.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">&lt;nav&gt;</code></td>
      <td style="text-align: center">With this you can mark a section of a page, which contains links for navigation.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">&lt;footer&gt;</code></td>
      <td style="text-align: center">Footer section oft the page.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">&lt;article&gt;</code></td>
      <td style="text-align: center">Self-contained composition in one document.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">&lt;aside&gt;</code></td>
      <td style="text-align: center">Content that indirectly belongs to the rest of the content, for example a dictionary of terms.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">&lt;details&gt;</code></td>
      <td style="text-align: center">Is used to mark up additional information, for example in a dropwdown, is often used in combination with the <code class="highlighter-rouge">&lt;summary&gt;</code> element.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">&lt;summary&gt;</code></td>
      <td style="text-align: center">Is often used to mark additional information, for example in combination with the <code class="highlighter-rouge">&lt;details&gt;</code> element.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">&lt;figure&gt;</code></td>
      <td style="text-align: center">An element that often explains itself graphically. For example a picture. The corresponding descriptive element is the <code class="highlighter-rouge">&lt;figcaption&gt;</code> element.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">&lt;figcaption&gt;</code></td>
      <td style="text-align: center">Describes the content of the related <code class="highlighter-rouge">&lt;figure&gt;</code> element.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">&lt;main&gt;</code></td>
      <td style="text-align: center">This can be used to mark the primary content of a page. for a blog post this would be the main text.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">&lt;mark&gt;</code></td>
      <td style="text-align: center">This can be used to identify highlighted text.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">&lt;time&gt;</code></td>
      <td style="text-align: center">This can be used to mark times or specific dates in the text.</td>
    </tr>
  </tbody>
</table>

<hr />

<h2 id="why-semantics-in-design-helps-developers">Why semantics in design helps developers</h2>
<p>If you are a designer without any code knowledge and now think that this is the job of the developers, you are right, but also not. Correct is, it is the task of the developers to implement the code semantically correct. However, if semantic code principles are followed in the design, the implementation is much easier later in the code. The following principles should be followed:</p>

<h3 id="structure-of-the-page">Structure of the page</h3>
<p>Make sure that your design can be categorized into the common areas. Clear areas on your site simplify the structure for developers.</p>

<p><img src="//placehold.it/800x400" alt="" /></p>

<h3 id="correct-use-of-the-elements">Correct use of the elements</h3>
<p>Use elements correctly and do not complicate your design unnecessarily. An example is overloaded overlays or multi-level nesting in dropdowns.</p>
:ET